<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (194)>
<gc check: finished verifying slots before local gc (194)>
<gc check: start verifying slots after local gc (194)>
<gc check: finished verifying slots after local gc (194)>
<gc check: start verifying slots before local gc (394)>
<gc check: finished verifying slots before local gc (394)>
<gc check: start verifying slots after local gc (394)>
<gc check: finished verifying slots after local gc (394)>
* Round 1 done in 10.323 seconds.
<gc check: start verifying slots before local gc (594)>
<gc check: finished verifying slots before local gc (594)>
<gc check: start verifying slots after local gc (594)>
<gc check: finished verifying slots after local gc (594)>
<gc check: start verifying slots before local gc (794)>
<gc check: finished verifying slots before local gc (794)>
<gc check: start verifying slots after local gc (794)>
<gc check: finished verifying slots after local gc (794)>
* Round 2 done in 2.917 seconds.
<gc check: start verifying slots before local gc (994)>
<gc check: finished verifying slots before local gc (994)>
<gc check: start verifying slots after local gc (994)>
<gc check: finished verifying slots after local gc (994)>
* Round 3 done in 2.646 seconds.
<gc check: start verifying slots before local gc (1194)>
<gc check: finished verifying slots before local gc (1194)>
<gc check: start verifying slots after local gc (1194)>
<gc check: finished verifying slots after local gc (1194)>
<gc check: start verifying slots before local gc (1394)>
<gc check: finished verifying slots before local gc (1394)>
<gc check: start verifying slots after local gc (1394)>
<gc check: finished verifying slots after local gc (1394)>
* Round 4 done in 2.859 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:30:51
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     16ms     50ms    0.10us    0.000ms
           BuiltinMethodLookup:     47ms     79ms    0.08us    0.000ms
                 CompareFloats:     15ms     97ms    0.08us    0.000ms
         CompareFloatsIntegers:     17ms     63ms    0.07us    0.000ms
               CompareIntegers:     18ms     54ms    0.03us    0.000ms
        CompareInternedStrings:     28ms     80ms    0.05us    0.000ms
                  CompareLongs:     16ms     38ms    0.04us    0.000ms
                CompareStrings:     21ms     56ms    0.06us    0.000ms
                CompareUnicode:     17ms     42ms    0.06us    0.000ms
                 ConcatStrings:    147ms    264ms    0.53us    0.000ms
                 ConcatUnicode:     87ms    117ms    0.39us    0.000ms
               CreateInstances:     40ms    111ms    1.00us    0.000ms
            CreateNewInstances:     54ms     82ms    0.98us    0.000ms
       CreateStringsWithConcat:     73ms    108ms    0.11us    0.000ms
       CreateUnicodeWithConcat:     32ms     47ms    0.12us    0.000ms
                  DictCreation:     39ms     77ms    0.19us    0.000ms
             DictWithFloatKeys:     14ms     62ms    0.07us    0.000ms
           DictWithIntegerKeys:     16ms     45ms    0.04us    0.000ms
            DictWithStringKeys:     18ms     47ms    0.04us    0.000ms
                      ForLoops:     93ms    114ms    4.55us    0.000ms
                    IfThenElse:     14ms     72ms    0.05us    0.000ms
                   ListSlicing:     19ms     78ms    5.59us    0.000ms
                NestedForLoops:     80ms    114ms    0.08us    0.000ms
          NormalClassAttribute:     22ms     58ms    0.05us    0.000ms
       NormalInstanceAttribute:     21ms     55ms    0.05us    0.000ms
           PythonFunctionCalls:     34ms     61ms    0.18us    0.000ms
             PythonMethodCalls:     32ms     66ms    0.29us    0.000ms
                     Recursion:     39ms     73ms    1.46us    0.000ms
                  SecondImport:     35ms     80ms    0.80us    0.000ms
           SecondPackageImport:     36ms     42ms    0.42us    0.000ms
         SecondSubmoduleImport:     60ms     70ms    0.70us    0.000ms
       SimpleComplexArithmetic:     18ms     66ms    0.07us    0.000ms
        SimpleDictManipulation:     24ms     79ms    0.07us    0.000ms
         SimpleFloatArithmetic:     22ms    111ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     80ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     35ms     83ms    0.07us    0.000ms
          SimpleLongArithmetic:     28ms     70ms    0.11us    0.000ms
                    SmallLists:     50ms    130ms    0.19us    0.000ms
                   SmallTuples:     51ms    107ms    0.20us    0.000ms
         SpecialClassAttribute:     23ms     57ms    0.05us    0.000ms
      SpecialInstanceAttribute:     21ms     54ms    0.04us    0.000ms
                StringMappings:    147ms    229ms    0.91us    0.000ms
              StringPredicates:     45ms     91ms    0.13us    0.000ms
                 StringSlicing:     54ms    121ms    0.22us    0.000ms
                     TryExcept:      1ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     86ms     98ms    1.54us    0.000ms
                  TupleSlicing:     30ms     41ms    0.16us    0.000ms
               UnicodeMappings:    111ms    170ms    4.71us    0.000ms
             UnicodePredicates:     42ms     79ms    0.15us    0.000ms
             UnicodeProperties:    343ms    462ms    1.15us    0.000ms
                UnicodeSlicing:     53ms     73ms    0.15us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2416ms   4686ms

===== DaCapo 9.12-MR1 jython PASSED in 21210 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (191)>
<gc check: finished verifying slots before local gc (191)>
<gc check: start verifying slots after local gc (191)>
<gc check: finished verifying slots after local gc (191)>
<gc check: start verifying slots before local gc (391)>
<gc check: finished verifying slots before local gc (391)>
<gc check: start verifying slots after local gc (391)>
<gc check: finished verifying slots after local gc (391)>
<gc check: start verifying slots before local gc (591)>
<gc check: finished verifying slots before local gc (591)>
<gc check: start verifying slots after local gc (591)>
<gc check: finished verifying slots after local gc (591)>
* Round 1 done in 10.024 seconds.
<gc check: start verifying slots after local gc (663)>
<gc check: finished verifying slots after local gc (663)>
<gc check: start verifying slots before local gc (791)>
<gc check: finished verifying slots before local gc (791)>
<gc check: start verifying slots after local gc (791)>
<gc check: finished verifying slots after local gc (791)>
<gc check: start verifying slots before local gc (991)>
<gc check: finished verifying slots before local gc (991)>
<gc check: start verifying slots after local gc (991)>
<gc check: finished verifying slots after local gc (991)>
<gc check: start verifying slots before local gc (1071)>
<gc check: finished verifying slots before local gc (1071)>
* Round 2 done in 3.407 seconds.
<gc check: start verifying slots after local gc (1191)>
<gc check: finished verifying slots after local gc (1191)>
<gc check: start verifying slots before local gc (1391)>
<gc check: finished verifying slots before local gc (1391)>
<gc check: start verifying slots after local gc (1391)>
<gc check: finished verifying slots after local gc (1391)>
* Round 3 done in 2.775 seconds.
<gc check: start verifying slots before local gc (1591)>
<gc check: finished verifying slots before local gc (1591)>
<gc check: start verifying slots after local gc (1591)>
<gc check: finished verifying slots after local gc (1591)>
<gc check: start verifying slots before local gc (1791)>
<gc check: finished verifying slots before local gc (1791)>
<gc check: start verifying slots after local gc (1791)>
<gc check: finished verifying slots after local gc (1791)>
<gc check: start verifying slots before local gc (1991)>
<gc check: finished verifying slots before local gc (1991)>
<gc check: start verifying slots after local gc (1991)>
<gc check: finished verifying slots after local gc (1991)>
* Round 4 done in 3.135 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:31:20
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     17ms     45ms    0.09us    0.000ms
           BuiltinMethodLookup:     43ms     79ms    0.08us    0.000ms
                 CompareFloats:     14ms     68ms    0.06us    0.000ms
         CompareFloatsIntegers:     17ms     46ms    0.05us    0.000ms
               CompareIntegers:     19ms     57ms    0.03us    0.000ms
        CompareInternedStrings:     31ms     80ms    0.05us    0.000ms
                  CompareLongs:     16ms     39ms    0.04us    0.000ms
                CompareStrings:     25ms     59ms    0.06us    0.000ms
                CompareUnicode:     20ms     45ms    0.06us    0.000ms
                 ConcatStrings:    254ms    336ms    0.67us    0.000ms
                 ConcatUnicode:     83ms    126ms    0.42us    0.000ms
               CreateInstances:     38ms    110ms    0.98us    0.000ms
            CreateNewInstances:     55ms     76ms    0.91us    0.000ms
       CreateStringsWithConcat:     68ms    120ms    0.12us    0.000ms
       CreateUnicodeWithConcat:     30ms     50ms    0.13us    0.000ms
                  DictCreation:     41ms    179ms    0.45us    0.000ms
             DictWithFloatKeys:     15ms     57ms    0.06us    0.000ms
           DictWithIntegerKeys:     19ms     48ms    0.04us    0.000ms
            DictWithStringKeys:     19ms     49ms    0.04us    0.000ms
                      ForLoops:     92ms    125ms    5.01us    0.000ms
                    IfThenElse:     17ms     76ms    0.06us    0.000ms
                   ListSlicing:     17ms     33ms    2.37us    0.000ms
                NestedForLoops:     80ms     98ms    0.07us    0.000ms
          NormalClassAttribute:     21ms     57ms    0.05us    0.000ms
       NormalInstanceAttribute:     20ms     56ms    0.05us    0.000ms
           PythonFunctionCalls:     36ms     87ms    0.26us    0.000ms
             PythonMethodCalls:     31ms     53ms    0.24us    0.000ms
                     Recursion:     43ms     83ms    1.65us    0.000ms
                  SecondImport:     36ms     61ms    0.61us    0.000ms
           SecondPackageImport:     38ms     44ms    0.44us    0.000ms
         SecondSubmoduleImport:     60ms     70ms    0.70us    0.000ms
       SimpleComplexArithmetic:     19ms     63ms    0.07us    0.000ms
        SimpleDictManipulation:     24ms    138ms    0.12us    0.000ms
         SimpleFloatArithmetic:     23ms    115ms    0.09us    0.000ms
      SimpleIntFloatArithmetic:     16ms     80ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     35ms     86ms    0.07us    0.000ms
          SimpleLongArithmetic:     29ms     72ms    0.11us    0.000ms
                    SmallLists:     49ms     76ms    0.11us    0.000ms
                   SmallTuples:     53ms    104ms    0.19us    0.000ms
         SpecialClassAttribute:     21ms     57ms    0.05us    0.000ms
      SpecialInstanceAttribute:     21ms     55ms    0.05us    0.000ms
                StringMappings:    146ms    194ms    0.77us    0.000ms
              StringPredicates:     44ms     81ms    0.12us    0.000ms
                 StringSlicing:     57ms    132ms    0.24us    0.000ms
                     TryExcept:      1ms     21ms    0.01us    0.000ms
                TryRaiseExcept:     84ms    102ms    1.59us    0.000ms
                  TupleSlicing:     29ms     41ms    0.16us    0.000ms
               UnicodeMappings:    109ms    154ms    4.27us    0.000ms
             UnicodePredicates:     52ms     85ms    0.16us    0.000ms
             UnicodeProperties:    324ms    490ms    1.23us    0.000ms
                UnicodeSlicing:     56ms    110ms    0.22us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2523ms   4835ms

===== DaCapo 9.12-MR1 jython PASSED in 21872 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
<gc check: start verifying slots after local gc (1)>
<gc check: finished verifying slots after local gc (1)>
<gc check: start verifying slots before local gc (2)>
<gc check: finished verifying slots before local gc (2)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
JVMDUMP039I Processing dump event "systhrow", detail "java/lang/OutOfMemoryError" at 2019/06/15 20:31:48 - please wait.
JVMDUMP032I JVM requested System dump using '/vagrant/core.20190615.203148.17894.0001.dmp' in response to an event
JVMPORT030W /proc/sys/kernel/core_pattern setting "|/usr/share/apport/apport %p %s %c %d %P" specifies that the core dump is to be piped to an external program.  Attempting to rename either core or core.17924.

JVMDUMP010I System dump written to /vagrant/core.20190615.203148.17894.0001.dmp
JVMDUMP032I JVM requested Heap dump using '/vagrant/heapdump.20190615.203148.17894.0002.phd' in response to an event
JVMDUMP010I Heap dump written to /vagrant/heapdump.20190615.203148.17894.0002.phd
JVMDUMP032I JVM requested Java dump using '/vagrant/javacore.20190615.203148.17894.0003.txt' in response to an event
JVMDUMP010I Java dump written to /vagrant/javacore.20190615.203148.17894.0003.txt
JVMDUMP032I JVM requested Snap dump using '/vagrant/Snap.20190615.203148.17894.0004.trc' in response to an event
JVMDUMP010I Snap dump written to /vagrant/Snap.20190615.203148.17894.0004.trc
JVMDUMP013I Processed dump event "systhrow", detail "java/lang/OutOfMemoryError".
Traceback (most recent call last):
  File "/vagrant/./scratch/jython/pybench/pybench.py", line 37, in <module>
    import sys, time, operator, string
  File "/vagrant/scratch/jython/Lib/string.py", line 81, in <module>
    import re as _re
  File "/vagrant/scratch/jython/Lib/re.py", line 105, in <module>
    import sre_compile
java.lang.OutOfMemoryError: Java heap space
	at java.base/java.lang.VMAccess.findClassOrNull(Native Method)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:1046)
	at java.base/java.math.BigInteger.smallToString(BigInteger.java:3970)
	at java.base/java.math.BigInteger.toString(BigInteger.java:3939)
	at java.base/java.math.BigInteger.toString(BigInteger.java:4100)
	at org.python.core.PyLong.__str__(PyLong.java:938)
	at org.python.compiler.CodeCompiler.visitNum(CodeCompiler.java:2315)
	at org.python.antlr.ast.Num.accept(Num.java:113)
	at org.python.antlr.Visitor.visit(Visitor.java:26)
	at org.python.compiler.CodeCompiler.visitAssign(CodeCompiler.java:547)
	at org.python.antlr.ast.Assign.accept(Assign.java:155)
	at org.python.antlr.Visitor.visit(Visitor.java:26)
	at org.python.compiler.CodeCompiler.suite(CodeCompiler.java:1449)
	at org.python.compiler.CodeCompiler.doTest(CodeCompiler.java:1106)
	at org.python.compiler.CodeCompiler.visitIf(CodeCompiler.java:1119)
	at org.python.antlr.ast.If.accept(If.java:195)
	at org.python.antlr.ast.Module.traverse(Module.java:127)
	at org.python.antlr.Visitor.traverse(Visitor.java:12)
	at org.python.compiler.CodeCompiler.visitModule(CodeCompiler.java:363)
	at org.python.antlr.ast.Module.accept(Module.java:120)
	at org.python.antlr.Visitor.visit(Visitor.java:26)
	at org.python.compiler.CodeCompiler.parse(CodeCompiler.java:313)
	at org.python.compiler.Module.codeConstant(Module.java:510)
	at org.python.compiler.Module.codeConstant(Module.java:490)
	at org.python.compiler.Module.compile(Module.java:664)
	at org.python.core.imp.compileSource(imp.java:325)
	at org.python.core.imp.createFromSource(imp.java:343)
	at org.python.core.imp.loadFromSource(imp.java:573)
	at org.python.core.imp.find_module(imp.java:473)
	at org.python.core.imp.import_next(imp.java:713)
	at org.python.core.imp.import_name(imp.java:824)
	at org.python.core.imp.importName(imp.java:884)
	at org.python.core.ImportFunction.__call__(__builtin__.java:1220)
	at org.python.core.PyObject.__call__(PyObject.java:357)
	at org.python.core.__builtin__.__import__(__builtin__.java:1173)
	at org.python.core.imp.importOne(imp.java:903)
	at re$py.f$0(/vagrant/scratch/jython/Lib/re.py:289)
	at re$py.call_function(/vagrant/scratch/jython/Lib/re.py)
	at org.python.core.PyTableCode.call(PyTableCode.java:165)
	at org.python.core.PyCode.call(PyCode.java:18)
	at org.python.core.imp.createFromCode(imp.java:386)
	at org.python.core.imp.createFromSource(imp.java:349)
	at org.python.core.imp.loadFromSource(imp.java:573)
	at org.python.core.imp.find_module(imp.java:473)
	at org.python.core.imp.import_next(imp.java:713)
	at org.python.core.imp.import_name(imp.java:824)
	at org.python.core.imp.importName(imp.java:884)
	at org.python.core.ImportFunction.__call__(__builtin__.java:1220)
	at org.python.core.PyObject.__call__(PyObject.java:357)
	at org.python.core.__builtin__.__import__(__builtin__.java:1173)
	at org.python.core.imp.importOneAs(imp.java:921)
	at string$py.f$0(/vagrant/scratch/jython/Lib/string.py:529)
	at string$py.call_function(/vagrant/scratch/jython/Lib/string.py)
	at org.python.core.PyTableCode.call(PyTableCode.java:165)
	at org.python.core.PyCode.call(PyCode.java:18)
	at org.python.core.imp.createFromCode(imp.java:386)
	at org.python.core.imp.createFromSource(imp.java:349)
	at org.python.core.imp.loadFromSource(imp.java:573)
	at org.python.core.imp.find_module(imp.java:473)
	at org.python.core.imp.import_next(imp.java:713)
	at org.python.core.imp.import_name(imp.java:824)
	at org.python.core.imp.importName(imp.java:884)
	at org.python.core.ImportFunction.__call__(__builtin__.java:1220)
	at org.python.core.PyObject.__call__(PyObject.java:357)
	at org.python.core.__builtin__.__import__(__builtin__.java:1173)
	at org.python.core.imp.importOne(imp.java:903)
	at org.python.pycode._pyx1.f$0(/vagrant/./scratch/jython/pybench/pybench.py:946)
	at org.python.pycode._pyx1.call_function(/vagrant/./scratch/jython/pybench/pybench.py)
	at org.python.core.PyTableCode.call(PyTableCode.java:165)
	at org.python.core.PyCode.call(PyCode.java:18)
	at org.python.core.Py.runCode(Py.java:1261)
	at org.python.util.PythonInterpreter.execfile(PythonInterpreter.java:235)
	at org.python.util.jython.run(jython.java:247)
	at org.python.util.jython.main(jython.java:129)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.dacapo.harness.Jython.iterate(Jython.java:50)
	at org.dacapo.harness.Benchmark.run(Benchmark.java:187)
	at org.dacapo.harness.TestHarness.runBenchmark(TestHarness.java:199)
	at org.dacapo.harness.TestHarness.main(TestHarness.java:152)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at Harness.main(Unknown Source)

java.lang.OutOfMemoryError: java.lang.OutOfMemoryError: Java heap space
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
<gc check: start verifying slots after local gc (1)>
<gc check: finished verifying slots after local gc (1)>
<gc check: start verifying slots before local gc (2)>
<gc check: finished verifying slots before local gc (2)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
<gc check: start verifying slots before local gc (197)>
<gc check: finished verifying slots before local gc (197)>
<gc check: start verifying slots after local gc (197)>
<gc check: finished verifying slots after local gc (197)>
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (397)>
<gc check: finished verifying slots before local gc (397)>
<gc check: start verifying slots after local gc (397)>
<gc check: finished verifying slots after local gc (397)>
<gc check: start verifying slots before local gc (597)>
<gc check: finished verifying slots before local gc (597)>
<gc check: start verifying slots after local gc (597)>
<gc check: finished verifying slots after local gc (597)>
<gc check: start verifying slots before local gc (797)>
<gc check: finished verifying slots before local gc (797)>
<gc check: start verifying slots after local gc (797)>
<gc check: finished verifying slots after local gc (797)>
* Round 1 done in 9.703 seconds.
<gc check: start verifying slots before local gc (997)>
<gc check: finished verifying slots before local gc (997)>
<gc check: start verifying slots after local gc (997)>
<gc check: finished verifying slots after local gc (997)>
<gc check: start verifying slots before local gc (1197)>
<gc check: finished verifying slots before local gc (1197)>
<gc check: start verifying slots after local gc (1197)>
<gc check: finished verifying slots after local gc (1197)>
<gc check: start verifying slots before local gc (1397)>
<gc check: finished verifying slots before local gc (1397)>
<gc check: start verifying slots after local gc (1397)>
<gc check: finished verifying slots after local gc (1397)>
<gc check: start verifying slots before local gc (1597)>
<gc check: finished verifying slots before local gc (1597)>
<gc check: start verifying slots after local gc (1597)>
<gc check: finished verifying slots after local gc (1597)>
* Round 2 done in 3.747 seconds.
<gc check: start verifying slots before local gc (1797)>
<gc check: finished verifying slots before local gc (1797)>
<gc check: start verifying slots after local gc (1797)>
<gc check: finished verifying slots after local gc (1797)>
<gc check: start verifying slots before local gc (1997)>
<gc check: finished verifying slots before local gc (1997)>
<gc check: start verifying slots after local gc (1997)>
<gc check: finished verifying slots after local gc (1997)>
<gc check: start verifying slots before local gc (2197)>
<gc check: finished verifying slots before local gc (2197)>
<gc check: start verifying slots after local gc (2197)>
<gc check: finished verifying slots after local gc (2197)>
<gc check: start verifying slots before local gc (2397)>
<gc check: finished verifying slots before local gc (2397)>
<gc check: start verifying slots after local gc (2397)>
<gc check: finished verifying slots after local gc (2397)>
* Round 3 done in 3.748 seconds.
<gc check: start verifying slots before local gc (2597)>
<gc check: finished verifying slots before local gc (2597)>
<gc check: start verifying slots after local gc (2597)>
<gc check: finished verifying slots after local gc (2597)>
<gc check: start verifying slots before local gc (2797)>
<gc check: finished verifying slots before local gc (2797)>
<gc check: start verifying slots after local gc (2797)>
<gc check: finished verifying slots after local gc (2797)>
<gc check: start verifying slots before local gc (2997)>
<gc check: finished verifying slots before local gc (2997)>
<gc check: start verifying slots after local gc (2997)>
<gc check: finished verifying slots after local gc (2997)>
* Round 4 done in 3.460 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:32:01
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     19ms    104ms    0.20us    0.000ms
           BuiltinMethodLookup:     44ms     76ms    0.07us    0.000ms
                 CompareFloats:     13ms     60ms    0.05us    0.000ms
         CompareFloatsIntegers:     17ms     43ms    0.05us    0.000ms
               CompareIntegers:     17ms     55ms    0.03us    0.000ms
        CompareInternedStrings:     29ms     56ms    0.04us    0.000ms
                  CompareLongs:     19ms     41ms    0.04us    0.000ms
                CompareStrings:     21ms     55ms    0.06us    0.000ms
                CompareUnicode:     17ms     43ms    0.06us    0.000ms
                 ConcatStrings:    229ms    373ms    0.75us    0.000ms
                 ConcatUnicode:    116ms    193ms    0.64us    0.000ms
               CreateInstances:     43ms     65ms    0.58us    0.000ms
            CreateNewInstances:     61ms    142ms    1.69us    0.000ms
       CreateStringsWithConcat:     93ms    123ms    0.12us    0.000ms
       CreateUnicodeWithConcat:     41ms    168ms    0.42us    0.000ms
                  DictCreation:     48ms     80ms    0.20us    0.000ms
             DictWithFloatKeys:     15ms     59ms    0.07us    0.000ms
           DictWithIntegerKeys:     17ms     45ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     28ms    0.02us    0.000ms
                      ForLoops:     92ms    118ms    4.74us    0.000ms
                    IfThenElse:     14ms     44ms    0.03us    0.000ms
                   ListSlicing:     24ms     34ms    2.45us    0.000ms
                NestedForLoops:     83ms     93ms    0.06us    0.000ms
          NormalClassAttribute:     22ms     65ms    0.05us    0.000ms
       NormalInstanceAttribute:     21ms     54ms    0.05us    0.000ms
           PythonFunctionCalls:     40ms    148ms    0.45us    0.000ms
             PythonMethodCalls:     37ms     58ms    0.26us    0.000ms
                     Recursion:     50ms     94ms    1.88us    0.000ms
                  SecondImport:     36ms     56ms    0.56us    0.000ms
           SecondPackageImport:     41ms     46ms    0.46us    0.000ms
         SecondSubmoduleImport:     64ms     71ms    0.71us    0.000ms
       SimpleComplexArithmetic:     22ms     64ms    0.07us    0.000ms
        SimpleDictManipulation:     24ms     82ms    0.07us    0.000ms
         SimpleFloatArithmetic:     22ms    171ms    0.13us    0.000ms
      SimpleIntFloatArithmetic:     15ms     80ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     77ms    0.07us    0.000ms
          SimpleLongArithmetic:     30ms     75ms    0.11us    0.000ms
                    SmallLists:     54ms     81ms    0.12us    0.000ms
                   SmallTuples:     55ms    117ms    0.22us    0.000ms
         SpecialClassAttribute:     23ms     59ms    0.05us    0.000ms
      SpecialInstanceAttribute:     21ms     56ms    0.05us    0.000ms
                StringMappings:    155ms    199ms    0.79us    0.000ms
              StringPredicates:     45ms    212ms    0.30us    0.000ms
                 StringSlicing:     59ms     91ms    0.16us    0.000ms
                     TryExcept:      0ms     13ms    0.01us    0.000ms
                TryRaiseExcept:     91ms    110ms    1.72us    0.000ms
                  TupleSlicing:     36ms    108ms    0.41us    0.000ms
               UnicodeMappings:    119ms    155ms    4.29us    0.000ms
             UnicodePredicates:     54ms     89ms    0.16us    0.000ms
             UnicodeProperties:    365ms    479ms    1.20us    0.000ms
                UnicodeSlicing:     68ms     88ms    0.18us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2708ms   5164ms

===== DaCapo 9.12-MR1 jython PASSED in 23277 msec =====
<gc check: start verifying slots before local gc (3197)>
<gc check: finished verifying slots before local gc (3197)>
<gc check: start verifying slots after local gc (3197)>
<gc check: finished verifying slots after local gc (3197)>
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
<gc check: start verifying slots before local gc (192)>
<gc check: finished verifying slots before local gc (192)>
<gc check: start verifying slots after local gc (192)>
<gc check: finished verifying slots after local gc (192)>
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (392)>
<gc check: finished verifying slots before local gc (392)>
<gc check: start verifying slots after local gc (392)>
<gc check: finished verifying slots after local gc (392)>
<gc check: start verifying slots before local gc (592)>
<gc check: finished verifying slots before local gc (592)>
<gc check: start verifying slots after local gc (592)>
<gc check: finished verifying slots after local gc (592)>
<gc check: start verifying slots before local gc (792)>
<gc check: finished verifying slots before local gc (792)>
<gc check: start verifying slots after local gc (792)>
<gc check: finished verifying slots after local gc (792)>
<gc check: start verifying slots before local gc (992)>
<gc check: finished verifying slots before local gc (992)>
<gc check: start verifying slots after local gc (992)>
<gc check: finished verifying slots after local gc (992)>
<gc check: start verifying slots before local gc (1192)>
<gc check: finished verifying slots before local gc (1192)>
<gc check: start verifying slots after local gc (1192)>
<gc check: finished verifying slots after local gc (1192)>
* Round 1 done in 10.902 seconds.
<gc check: start verifying slots before local gc (1392)>
<gc check: finished verifying slots before local gc (1392)>
<gc check: start verifying slots after local gc (1392)>
<gc check: finished verifying slots after local gc (1392)>
<gc check: start verifying slots before local gc (1592)>
<gc check: finished verifying slots before local gc (1592)>
<gc check: start verifying slots after local gc (1592)>
<gc check: finished verifying slots after local gc (1592)>
<gc check: start verifying slots before local gc (1792)>
<gc check: finished verifying slots before local gc (1792)>
<gc check: start verifying slots after local gc (1792)>
<gc check: finished verifying slots after local gc (1792)>
<gc check: start verifying slots before local gc (1992)>
<gc check: finished verifying slots before local gc (1992)>
<gc check: start verifying slots after local gc (1992)>
<gc check: finished verifying slots after local gc (1992)>
* Round 2 done in 3.791 seconds.
<gc check: start verifying slots before local gc (2192)>
<gc check: finished verifying slots before local gc (2192)>
<gc check: start verifying slots after local gc (2192)>
<gc check: finished verifying slots after local gc (2192)>
<gc check: start verifying slots before local gc (2392)>
<gc check: finished verifying slots before local gc (2392)>
<gc check: start verifying slots after local gc (2392)>
<gc check: finished verifying slots after local gc (2392)>
<gc check: start verifying slots before local gc (2592)>
<gc check: finished verifying slots before local gc (2592)>
<gc check: start verifying slots after local gc (2592)>
<gc check: finished verifying slots after local gc (2592)>
<gc check: start verifying slots before local gc (2792)>
<gc check: finished verifying slots before local gc (2792)>
<gc check: start verifying slots after local gc (2792)>
<gc check: finished verifying slots after local gc (2792)>
<gc check: start verifying slots before local gc (2992)>
<gc check: finished verifying slots before local gc (2992)>
<gc check: start verifying slots after local gc (2992)>
<gc check: finished verifying slots after local gc (2992)>
* Round 3 done in 3.997 seconds.
<gc check: start verifying slots before local gc (3192)>
<gc check: finished verifying slots before local gc (3192)>
<gc check: start verifying slots after local gc (3192)>
<gc check: finished verifying slots after local gc (3192)>
<gc check: start verifying slots before local gc (3392)>
<gc check: finished verifying slots before local gc (3392)>
<gc check: start verifying slots after local gc (3392)>
<gc check: finished verifying slots after local gc (3392)>
<gc check: start verifying slots before local gc (3592)>
<gc check: finished verifying slots before local gc (3592)>
<gc check: start verifying slots after local gc (3592)>
<gc check: finished verifying slots after local gc (3592)>
<gc check: start verifying slots before local gc (3792)>
<gc check: finished verifying slots before local gc (3792)>
<gc check: start verifying slots after local gc (3792)>
<gc check: finished verifying slots after local gc (3792)>
* Round 4 done in 3.954 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:32:33
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     20ms     45ms    0.09us    0.000ms
           BuiltinMethodLookup:     52ms     85ms    0.08us    0.000ms
                 CompareFloats:     13ms     61ms    0.05us    0.000ms
         CompareFloatsIntegers:     17ms     43ms    0.05us    0.000ms
               CompareIntegers:     17ms     55ms    0.03us    0.000ms
        CompareInternedStrings:     29ms     79ms    0.05us    0.000ms
                  CompareLongs:     15ms     39ms    0.04us    0.000ms
                CompareStrings:     21ms     56ms    0.06us    0.000ms
                CompareUnicode:     18ms     45ms    0.06us    0.000ms
                 ConcatStrings:    411ms    437ms    0.87us    0.000ms
                 ConcatUnicode:    117ms    254ms    0.85us    0.000ms
               CreateInstances:     44ms     70ms    0.63us    0.000ms
            CreateNewInstances:     64ms     89ms    1.06us    0.000ms
       CreateStringsWithConcat:     95ms    248ms    0.25us    0.000ms
       CreateUnicodeWithConcat:     40ms     55ms    0.14us    0.000ms
                  DictCreation:     47ms     84ms    0.21us    0.000ms
             DictWithFloatKeys:     14ms     57ms    0.06us    0.000ms
           DictWithIntegerKeys:     16ms     46ms    0.04us    0.000ms
            DictWithStringKeys:     18ms     49ms    0.04us    0.000ms
                      ForLoops:     94ms    128ms    5.14us    0.000ms
                    IfThenElse:     15ms     72ms    0.05us    0.000ms
                   ListSlicing:     29ms     97ms    6.89us    0.000ms
                NestedForLoops:     83ms    152ms    0.10us    0.000ms
          NormalClassAttribute:     22ms     58ms    0.05us    0.000ms
       NormalInstanceAttribute:     20ms     54ms    0.05us    0.000ms
           PythonFunctionCalls:     40ms     92ms    0.28us    0.000ms
             PythonMethodCalls:     36ms     60ms    0.27us    0.000ms
                     Recursion:     52ms     97ms    1.93us    0.000ms
                  SecondImport:     40ms     59ms    0.59us    0.000ms
           SecondPackageImport:     44ms     55ms    0.55us    0.000ms
         SecondSubmoduleImport:     69ms     76ms    0.76us    0.000ms
       SimpleComplexArithmetic:     25ms     67ms    0.08us    0.000ms
        SimpleDictManipulation:     24ms     85ms    0.07us    0.000ms
         SimpleFloatArithmetic:     28ms    237ms    0.18us    0.000ms
      SimpleIntFloatArithmetic:     15ms     80ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     70ms    0.05us    0.000ms
        SimpleListManipulation:     35ms     85ms    0.07us    0.000ms
          SimpleLongArithmetic:     39ms     78ms    0.12us    0.000ms
                    SmallLists:     58ms     82ms    0.12us    0.000ms
                   SmallTuples:     62ms    123ms    0.23us    0.000ms
         SpecialClassAttribute:     22ms     58ms    0.05us    0.000ms
      SpecialInstanceAttribute:     21ms     55ms    0.05us    0.000ms
                StringMappings:    135ms    208ms    0.83us    0.000ms
              StringPredicates:     51ms     88ms    0.13us    0.000ms
                 StringSlicing:     76ms    261ms    0.47us    0.000ms
                     TryExcept:      0ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     92ms    109ms    1.71us    0.000ms
                  TupleSlicing:     34ms     46ms    0.18us    0.000ms
               UnicodeMappings:    128ms    281ms    7.81us    0.000ms
             UnicodePredicates:     57ms     91ms    0.17us    0.000ms
             UnicodeProperties:    367ms    438ms    1.10us    0.000ms
                UnicodeSlicing:     69ms    202ms    0.41us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2966ms   5661ms

===== DaCapo 9.12-MR1 jython PASSED in 25373 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
<gc check: start verifying slots after local gc (1)>
<gc check: finished verifying slots after local gc (1)>
<gc check: start verifying slots before local gc (2)>
<gc check: finished verifying slots before local gc (2)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
<gc check: start verifying slots before local gc (190)>
<gc check: finished verifying slots before local gc (190)>
<gc check: start verifying slots after local gc (190)>
<gc check: finished verifying slots after local gc (190)>
<gc check: start verifying slots before local gc (390)>
<gc check: finished verifying slots before local gc (390)>
<gc check: start verifying slots after local gc (390)>
<gc check: finished verifying slots after local gc (390)>
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (590)>
<gc check: finished verifying slots before local gc (590)>
<gc check: start verifying slots after local gc (590)>
<gc check: finished verifying slots after local gc (590)>
<gc check: start verifying slots before local gc (790)>
<gc check: finished verifying slots before local gc (790)>
<gc check: start verifying slots after local gc (790)>
<gc check: finished verifying slots after local gc (790)>
<gc check: start verifying slots before local gc (990)>
<gc check: finished verifying slots before local gc (990)>
<gc check: start verifying slots after local gc (990)>
<gc check: finished verifying slots after local gc (990)>
<gc check: start verifying slots before local gc (1190)>
<gc check: finished verifying slots before local gc (1190)>
<gc check: start verifying slots after local gc (1190)>
<gc check: finished verifying slots after local gc (1190)>
<gc check: start verifying slots before local gc (1390)>
<gc check: finished verifying slots before local gc (1390)>
<gc check: start verifying slots after local gc (1390)>
<gc check: finished verifying slots after local gc (1390)>
<gc check: start verifying slots before local gc (1590)>
<gc check: finished verifying slots before local gc (1590)>
<gc check: start verifying slots after local gc (1590)>
<gc check: finished verifying slots after local gc (1590)>
* Round 1 done in 11.982 seconds.
<gc check: start verifying slots before local gc (1790)>
<gc check: finished verifying slots before local gc (1790)>
<gc check: start verifying slots after local gc (1790)>
<gc check: finished verifying slots after local gc (1790)>
<gc check: start verifying slots before local gc (1990)>
<gc check: finished verifying slots before local gc (1990)>
<gc check: start verifying slots after local gc (1990)>
<gc check: finished verifying slots after local gc (1990)>
<gc check: start verifying slots before local gc (2190)>
<gc check: finished verifying slots before local gc (2190)>
<gc check: start verifying slots after local gc (2190)>
<gc check: finished verifying slots after local gc (2190)>
<gc check: start verifying slots before local gc (2390)>
<gc check: finished verifying slots before local gc (2390)>
<gc check: start verifying slots after local gc (2390)>
<gc check: finished verifying slots after local gc (2390)>
<gc check: start verifying slots before local gc (2590)>
<gc check: finished verifying slots before local gc (2590)>
<gc check: start verifying slots after local gc (2590)>
<gc check: finished verifying slots after local gc (2590)>
<gc check: start verifying slots before local gc (2790)>
<gc check: finished verifying slots before local gc (2790)>
<gc check: start verifying slots after local gc (2790)>
<gc check: finished verifying slots after local gc (2790)>
<gc check: start verifying slots before local gc (2990)>
<gc check: finished verifying slots before local gc (2990)>
<gc check: start verifying slots after local gc (2990)>
<gc check: finished verifying slots after local gc (2990)>
* Round 2 done in 5.265 seconds.
<gc check: start verifying slots after local gc (3190)>
<gc check: finished verifying slots after local gc (3190)>
<gc check: start verifying slots after local gc (3214)>
<gc check: finished verifying slots after local gc (3214)>
<gc check: start verifying slots after local gc (3390)>
<gc check: finished verifying slots after local gc (3390)>
<gc check: start verifying slots before local gc (3590)>
<gc check: finished verifying slots before local gc (3590)>
<gc check: start verifying slots after local gc (3590)>
<gc check: finished verifying slots after local gc (3590)>
<gc check: start verifying slots before local gc (3790)>
<gc check: finished verifying slots before local gc (3790)>
<gc check: start verifying slots after local gc (3790)>
<gc check: finished verifying slots after local gc (3790)>
<gc check: start verifying slots before local gc (3990)>
<gc check: finished verifying slots before local gc (3990)>
<gc check: start verifying slots after local gc (3990)>
<gc check: finished verifying slots after local gc (3990)>
<gc check: start verifying slots after local gc (4166)>
<gc check: finished verifying slots after local gc (4166)>
<gc check: start verifying slots before local gc (4190)>
<gc check: finished verifying slots before local gc (4190)>
<gc check: start verifying slots after local gc (4190)>
<gc check: finished verifying slots after local gc (4190)>
<gc check: start verifying slots before local gc (4390)>
<gc check: finished verifying slots before local gc (4390)>
<gc check: start verifying slots after local gc (4390)>
<gc check: finished verifying slots after local gc (4390)>
* Round 3 done in 5.153 seconds.
<gc check: start verifying slots before local gc (4590)>
<gc check: finished verifying slots before local gc (4590)>
<gc check: start verifying slots after local gc (4590)>
<gc check: finished verifying slots after local gc (4590)>
<gc check: start verifying slots before local gc (4790)>
<gc check: finished verifying slots before local gc (4790)>
<gc check: start verifying slots after local gc (4790)>
<gc check: finished verifying slots after local gc (4790)>
<gc check: start verifying slots before local gc (4990)>
<gc check: finished verifying slots before local gc (4990)>
<gc check: start verifying slots after local gc (4990)>
<gc check: finished verifying slots after local gc (4990)>
<gc check: start verifying slots before local gc (5190)>
<gc check: finished verifying slots before local gc (5190)>
<gc check: start verifying slots after local gc (5190)>
<gc check: finished verifying slots after local gc (5190)>
<gc check: start verifying slots before local gc (5390)>
<gc check: finished verifying slots before local gc (5390)>
<gc check: start verifying slots after local gc (5390)>
<gc check: finished verifying slots after local gc (5390)>
<gc check: start verifying slots before local gc (5590)>
<gc check: finished verifying slots before local gc (5590)>
<gc check: start verifying slots after local gc (5590)>
<gc check: finished verifying slots after local gc (5590)>
* Round 4 done in 4.866 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:33:05
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     25ms     48ms    0.09us    0.000ms
           BuiltinMethodLookup:     57ms     90ms    0.09us    0.000ms
                 CompareFloats:     16ms     62ms    0.05us    0.000ms
         CompareFloatsIntegers:     18ms     45ms    0.05us    0.000ms
               CompareIntegers:     21ms     58ms    0.03us    0.000ms
        CompareInternedStrings:     34ms     81ms    0.05us    0.000ms
                  CompareLongs:     18ms     40ms    0.04us    0.000ms
                CompareStrings:     25ms     58ms    0.06us    0.000ms
                CompareUnicode:     20ms     46ms    0.06us    0.000ms
                 ConcatStrings:    547ms    631ms    1.26us    0.000ms
                 ConcatUnicode:    314ms    435ms    1.45us    0.000ms
               CreateInstances:     49ms     81ms    0.73us    0.000ms
            CreateNewInstances:     68ms     90ms    1.07us    0.000ms
       CreateStringsWithConcat:    140ms    306ms    0.31us    0.000ms
       CreateUnicodeWithConcat:     60ms    140ms    0.35us    0.000ms
                  DictCreation:     66ms    162ms    0.41us    0.000ms
             DictWithFloatKeys:     14ms     54ms    0.06us    0.000ms
           DictWithIntegerKeys:     16ms     46ms    0.04us    0.000ms
            DictWithStringKeys:     16ms     46ms    0.04us    0.000ms
                      ForLoops:     91ms    130ms    5.18us    0.000ms
                    IfThenElse:     17ms     72ms    0.05us    0.000ms
                   ListSlicing:     41ms     60ms    4.30us    0.000ms
                NestedForLoops:     85ms    122ms    0.08us    0.000ms
          NormalClassAttribute:     21ms     62ms    0.05us    0.000ms
       NormalInstanceAttribute:     22ms     59ms    0.05us    0.000ms
           PythonFunctionCalls:     51ms    167ms    0.51us    0.000ms
             PythonMethodCalls:     46ms     87ms    0.39us    0.000ms
                     Recursion:     60ms    190ms    3.80us    0.000ms
                  SecondImport:     50ms     74ms    0.74us    0.000ms
           SecondPackageImport:     50ms     56ms    0.56us    0.000ms
         SecondSubmoduleImport:     82ms    152ms    1.52us    0.000ms
       SimpleComplexArithmetic:     29ms     77ms    0.09us    0.000ms
        SimpleDictManipulation:     29ms     82ms    0.07us    0.000ms
         SimpleFloatArithmetic:     33ms    187ms    0.14us    0.000ms
      SimpleIntFloatArithmetic:     16ms     81ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     15ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     28ms     82ms    0.07us    0.000ms
          SimpleLongArithmetic:     47ms     96ms    0.15us    0.000ms
                    SmallLists:     64ms     94ms    0.14us    0.000ms
                   SmallTuples:     73ms    137ms    0.25us    0.000ms
         SpecialClassAttribute:     21ms     57ms    0.05us    0.000ms
      SpecialInstanceAttribute:     22ms     57ms    0.05us    0.000ms
                StringMappings:    103ms    254ms    1.01us    0.000ms
              StringPredicates:     52ms    167ms    0.24us    0.000ms
                 StringSlicing:    118ms    259ms    0.46us    0.000ms
                     TryExcept:      1ms     20ms    0.01us    0.000ms
                TryRaiseExcept:    105ms    125ms    1.95us    0.000ms
                  TupleSlicing:     54ms     96ms    0.37us    0.000ms
               UnicodeMappings:    132ms    221ms    6.14us    0.000ms
             UnicodePredicates:     56ms     97ms    0.18us    0.000ms
             UnicodeProperties:    382ms    618ms    1.55us    0.000ms
                UnicodeSlicing:    108ms    190ms    0.39us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3628ms   6817ms

===== DaCapo 9.12-MR1 jython PASSED in 30405 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
<gc check: start verifying slots after local gc (1)>
<gc check: finished verifying slots after local gc (1)>
<gc check: start verifying slots before local gc (2)>
<gc check: finished verifying slots before local gc (2)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (198)>
<gc check: finished verifying slots before local gc (198)>
<gc check: start verifying slots after local gc (198)>
<gc check: finished verifying slots after local gc (198)>
* Round 1 done in 8.994 seconds.
<gc check: start verifying slots before local gc (398)>
<gc check: finished verifying slots before local gc (398)>
<gc check: start verifying slots after local gc (398)>
<gc check: finished verifying slots after local gc (398)>
* Round 2 done in 2.395 seconds.
* Round 3 done in 2.042 seconds.
<gc check: start verifying slots before local gc (598)>
<gc check: finished verifying slots before local gc (598)>
<gc check: start verifying slots after local gc (598)>
<gc check: finished verifying slots after local gc (598)>
* Round 4 done in 2.228 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:33:41
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     14ms     37ms    0.07us    0.000ms
           BuiltinMethodLookup:     40ms     76ms    0.07us    0.000ms
                 CompareFloats:     13ms     45ms    0.04us    0.000ms
         CompareFloatsIntegers:     16ms     41ms    0.05us    0.000ms
               CompareIntegers:     17ms     53ms    0.03us    0.000ms
        CompareInternedStrings:     28ms     79ms    0.05us    0.000ms
                  CompareLongs:     15ms     38ms    0.04us    0.000ms
                CompareStrings:     20ms     52ms    0.05us    0.000ms
                CompareUnicode:     17ms     43ms    0.06us    0.000ms
                 ConcatStrings:     91ms    167ms    0.33us    0.000ms
                 ConcatUnicode:     54ms     77ms    0.26us    0.000ms
               CreateInstances:     33ms     61ms    0.54us    0.000ms
            CreateNewInstances:     45ms     64ms    0.76us    0.000ms
       CreateStringsWithConcat:     44ms     85ms    0.08us    0.000ms
       CreateUnicodeWithConcat:     20ms     38ms    0.09us    0.000ms
                  DictCreation:     32ms    120ms    0.30us    0.000ms
             DictWithFloatKeys:     15ms     56ms    0.06us    0.000ms
           DictWithIntegerKeys:     17ms     47ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     48ms    0.04us    0.000ms
                      ForLoops:     92ms    128ms    5.10us    0.000ms
                    IfThenElse:     14ms     73ms    0.05us    0.000ms
                   ListSlicing:     11ms     23ms    1.61us    0.000ms
                NestedForLoops:     79ms    109ms    0.07us    0.000ms
          NormalClassAttribute:     22ms     58ms    0.05us    0.000ms
       NormalInstanceAttribute:     20ms     53ms    0.04us    0.000ms
           PythonFunctionCalls:     25ms     73ms    0.22us    0.000ms
             PythonMethodCalls:     28ms     48ms    0.21us    0.000ms
                     Recursion:     35ms     55ms    1.09us    0.000ms
                  SecondImport:     30ms     55ms    0.55us    0.000ms
           SecondPackageImport:     33ms     39ms    0.39us    0.000ms
         SecondSubmoduleImport:     51ms     60ms    0.60us    0.000ms
       SimpleComplexArithmetic:     13ms     59ms    0.07us    0.000ms
        SimpleDictManipulation:     21ms     79ms    0.07us    0.000ms
         SimpleFloatArithmetic:     17ms    108ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     15ms     83ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     69ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     75ms    0.06us    0.000ms
          SimpleLongArithmetic:     20ms     59ms    0.09us    0.000ms
                    SmallLists:     41ms     66ms    0.10us    0.000ms
                   SmallTuples:     42ms     90ms    0.17us    0.000ms
         SpecialClassAttribute:     22ms     56ms    0.05us    0.000ms
      SpecialInstanceAttribute:     20ms     54ms    0.04us    0.000ms
                StringMappings:    135ms    171ms    0.68us    0.000ms
              StringPredicates:     40ms     79ms    0.11us    0.000ms
                 StringSlicing:     33ms    104ms    0.19us    0.000ms
                     TryExcept:      0ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     77ms     97ms    1.52us    0.000ms
                  TupleSlicing:     19ms     31ms    0.12us    0.000ms
               UnicodeMappings:     91ms    135ms    3.74us    0.000ms
             UnicodePredicates:     49ms     82ms    0.15us    0.000ms
             UnicodeProperties:    287ms    342ms    0.85us    0.000ms
                UnicodeSlicing:     34ms     55ms    0.11us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2014ms   3915ms

===== DaCapo 9.12-MR1 jython PASSED in 17943 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
<gc check: start verifying slots before local gc (193)>
<gc check: finished verifying slots before local gc (193)>
<gc check: start verifying slots after local gc (193)>
<gc check: finished verifying slots after local gc (193)>
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (393)>
<gc check: finished verifying slots before local gc (393)>
<gc check: start verifying slots after local gc (393)>
<gc check: finished verifying slots after local gc (393)>
<gc check: start verifying slots before local gc (593)>
<gc check: finished verifying slots before local gc (593)>
<gc check: start verifying slots after local gc (593)>
<gc check: finished verifying slots after local gc (593)>
* Round 1 done in 10.083 seconds.
<gc check: start verifying slots before local gc (793)>
<gc check: finished verifying slots before local gc (793)>
<gc check: start verifying slots after local gc (793)>
<gc check: finished verifying slots after local gc (793)>
<gc check: start verifying slots before local gc (993)>
<gc check: finished verifying slots before local gc (993)>
<gc check: start verifying slots after local gc (993)>
<gc check: finished verifying slots after local gc (993)>
<gc check: start verifying slots before local gc (1193)>
<gc check: finished verifying slots before local gc (1193)>
<gc check: start verifying slots after local gc (1193)>
<gc check: finished verifying slots after local gc (1193)>
* Round 2 done in 3.461 seconds.
<gc check: start verifying slots before local gc (1393)>
<gc check: finished verifying slots before local gc (1393)>
<gc check: start verifying slots after local gc (1393)>
<gc check: finished verifying slots after local gc (1393)>
<gc check: start verifying slots before local gc (1593)>
<gc check: finished verifying slots before local gc (1593)>
<gc check: start verifying slots after local gc (1593)>
<gc check: finished verifying slots after local gc (1593)>
<gc check: start verifying slots after local gc (1657)>
<gc check: finished verifying slots after local gc (1657)>
<gc check: start verifying slots before local gc (1793)>
<gc check: finished verifying slots before local gc (1793)>
<gc check: start verifying slots after local gc (1793)>
<gc check: finished verifying slots after local gc (1793)>
* Round 3 done in 3.293 seconds.
<gc check: start verifying slots before local gc (1993)>
<gc check: finished verifying slots before local gc (1993)>
<gc check: start verifying slots after local gc (1993)>
<gc check: finished verifying slots after local gc (1993)>
<gc check: start verifying slots before local gc (2193)>
<gc check: finished verifying slots before local gc (2193)>
<gc check: start verifying slots after local gc (2193)>
<gc check: finished verifying slots after local gc (2193)>
<gc check: start verifying slots before local gc (2393)>
<gc check: finished verifying slots before local gc (2393)>
<gc check: start verifying slots after local gc (2393)>
<gc check: finished verifying slots after local gc (2393)>
* Round 4 done in 3.393 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:34:07
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     16ms     46ms    0.09us    0.000ms
           BuiltinMethodLookup:     39ms     83ms    0.08us    0.000ms
                 CompareFloats:     13ms     62ms    0.05us    0.000ms
         CompareFloatsIntegers:     17ms     43ms    0.05us    0.000ms
               CompareIntegers:     16ms     52ms    0.03us    0.000ms
        CompareInternedStrings:     28ms     75ms    0.05us    0.000ms
                  CompareLongs:     15ms     37ms    0.04us    0.000ms
                CompareStrings:     21ms     53ms    0.05us    0.000ms
                CompareUnicode:     17ms     42ms    0.06us    0.000ms
                 ConcatStrings:    321ms    390ms    0.78us    0.000ms
                 ConcatUnicode:     92ms    196ms    0.65us    0.000ms
               CreateInstances:     39ms     71ms    0.63us    0.000ms
            CreateNewInstances:     53ms     75ms    0.89us    0.000ms
       CreateStringsWithConcat:     95ms    245ms    0.25us    0.000ms
       CreateUnicodeWithConcat:     32ms    110ms    0.27us    0.000ms
                  DictCreation:     43ms     82ms    0.20us    0.000ms
             DictWithFloatKeys:     15ms     57ms    0.06us    0.000ms
           DictWithIntegerKeys:     17ms     45ms    0.04us    0.000ms
            DictWithStringKeys:     18ms     48ms    0.04us    0.000ms
                      ForLoops:     93ms    128ms    5.13us    0.000ms
                    IfThenElse:     14ms     72ms    0.05us    0.000ms
                   ListSlicing:     26ms     67ms    4.79us    0.000ms
                NestedForLoops:     83ms    105ms    0.07us    0.000ms
          NormalClassAttribute:     21ms     59ms    0.05us    0.000ms
       NormalInstanceAttribute:     20ms     54ms    0.05us    0.000ms
           PythonFunctionCalls:     35ms     89ms    0.27us    0.000ms
             PythonMethodCalls:     34ms     56ms    0.25us    0.000ms
                     Recursion:     42ms     87ms    1.75us    0.000ms
                  SecondImport:     38ms     59ms    0.59us    0.000ms
           SecondPackageImport:     40ms     53ms    0.53us    0.000ms
         SecondSubmoduleImport:     65ms     76ms    0.76us    0.000ms
       SimpleComplexArithmetic:     20ms     63ms    0.07us    0.000ms
        SimpleDictManipulation:     23ms     79ms    0.07us    0.000ms
         SimpleFloatArithmetic:     23ms    112ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     77ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     15ms     66ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     80ms    0.07us    0.000ms
          SimpleLongArithmetic:     30ms     74ms    0.11us    0.000ms
                    SmallLists:     53ms     80ms    0.12us    0.000ms
                   SmallTuples:     55ms    173ms    0.32us    0.000ms
         SpecialClassAttribute:     22ms     58ms    0.05us    0.000ms
      SpecialInstanceAttribute:     19ms     53ms    0.04us    0.000ms
                StringMappings:    151ms    190ms    0.75us    0.000ms
              StringPredicates:     45ms    143ms    0.20us    0.000ms
                 StringSlicing:     60ms    135ms    0.24us    0.000ms
                     TryExcept:      0ms     19ms    0.01us    0.000ms
                TryRaiseExcept:     90ms    171ms    2.67us    0.000ms
                  TupleSlicing:     31ms     44ms    0.17us    0.000ms
               UnicodeMappings:    107ms    141ms    3.91us    0.000ms
             UnicodePredicates:     53ms     85ms    0.16us    0.000ms
             UnicodeProperties:    342ms    407ms    1.02us    0.000ms
                UnicodeSlicing:     62ms     90ms    0.18us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2669ms   5057ms

===== DaCapo 9.12-MR1 jython PASSED in 23000 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
JVMDUMP039I Processing dump event "systhrow", detail "java/lang/OutOfMemoryError" at 2019/06/15 20:34:35 - please wait.
JVMDUMP032I JVM requested System dump using '/vagrant/core.20190615.203435.18101.0001.dmp' in response to an event
JVMPORT030W /proc/sys/kernel/core_pattern setting "|/usr/share/apport/apport %p %s %c %d %P" specifies that the core dump is to be piped to an external program.  Attempting to rename either core or core.18132.

JVMDUMP010I System dump written to /vagrant/core.20190615.203435.18101.0001.dmp
JVMDUMP032I JVM requested Heap dump using '/vagrant/heapdump.20190615.203435.18101.0002.phd' in response to an event
JVMDUMP010I Heap dump written to /vagrant/heapdump.20190615.203435.18101.0002.phd
JVMDUMP032I JVM requested Java dump using '/vagrant/javacore.20190615.203435.18101.0003.txt' in response to an event
JVMDUMP010I Java dump written to /vagrant/javacore.20190615.203435.18101.0003.txt
JVMDUMP032I JVM requested Snap dump using '/vagrant/Snap.20190615.203435.18101.0004.trc' in response to an event
JVMDUMP010I Snap dump written to /vagrant/Snap.20190615.203435.18101.0004.trc
JVMDUMP013I Processed dump event "systhrow", detail "java/lang/OutOfMemoryError".
JVMDUMP039I Processing dump event "systhrow", detail "java/lang/OutOfMemoryError" at 2019/06/15 20:34:41 - please wait.
JVMDUMP032I JVM requested Heap dump using '/vagrant/heapdump.20190615.203441.18101.0005.phd' in response to an event
JVMDUMP010I Heap dump written to /vagrant/heapdump.20190615.203441.18101.0005.phd
JVMDUMP032I JVM requested Java dump using '/vagrant/javacore.20190615.203441.18101.0006.txt' in response to an event
JVMDUMP010I Java dump written to /vagrant/javacore.20190615.203441.18101.0006.txt
JVMDUMP032I JVM requested Snap dump using '/vagrant/Snap.20190615.203441.18101.0007.trc' in response to an event
JVMDUMP010I Snap dump written to /vagrant/Snap.20190615.203441.18101.0007.trc
JVMDUMP013I Processed dump event "systhrow", detail "java/lang/OutOfMemoryError".
JVMDUMP039I Processing dump event "systhrow", detail "java/lang/OutOfMemoryError" at 2019/06/15 20:34:41 - please wait.
JVMDUMP032I JVM requested Heap dump using '/vagrant/heapdump.20190615.203441.18101.0008.phd' in response to an event
JVMDUMP010I Heap dump written to /vagrant/heapdump.20190615.203441.18101.0008.phd
JVMDUMP032I JVM requested Java dump using '/vagrant/javacore.20190615.203441.18101.0009.txt' in response to an event
JVMDUMP010I Java dump written to /vagrant/javacore.20190615.203441.18101.0009.txt
JVMDUMP032I JVM requested Snap dump using '/vagrant/Snap.20190615.203441.18101.0010.trc' in response to an event
JVMDUMP010I Snap dump written to /vagrant/Snap.20190615.203441.18101.0010.trc
JVMDUMP013I Processed dump event "systhrow", detail "java/lang/OutOfMemoryError".
JVMDUMP039I Processing dump event "systhrow", detail "java/lang/OutOfMemoryError" at 2019/06/15 20:34:41 - please wait.
JVMDUMP032I JVM requested Heap dump using '/vagrant/heapdump.20190615.203441.18101.0011.phd' in response to an event
JVMDUMP010I Heap dump written to /vagrant/heapdump.20190615.203441.18101.0011.phd
JVMDUMP032I JVM requested Java dump using '/vagrant/javacore.20190615.203441.18101.0012.txt' in response to an event
JVMDUMP010I Java dump written to /vagrant/javacore.20190615.203441.18101.0012.txt
JVMDUMP032I JVM requested Snap dump using '/vagrant/Snap.20190615.203441.18101.0013.trc' in response to an event
JVMDUMP010I Snap dump written to /vagrant/Snap.20190615.203441.18101.0013.trc
JVMDUMP013I Processed dump event "systhrow", detail "java/lang/OutOfMemoryError".
java.lang.reflect.InvocationTargetException
java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.dacapo.harness.Jython.iterate(Jython.java:50)
	at org.dacapo.harness.Benchmark.run(Benchmark.java:187)
	at org.dacapo.harness.TestHarness.runBenchmark(TestHarness.java:199)
	at org.dacapo.harness.TestHarness.main(TestHarness.java:152)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at Harness.main(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Java heap space
	at java.base/java.lang.ClassLoader.defineClassImpl(Native Method)
	at java.base/java.lang.ClassLoader.defineClassInternal(ClassLoader.java:479)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:448)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)
	at java.base/java.net.URLClassLoader.defineClass(URLClassLoader.java:688)
	at java.base/java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java:1093)
	at java.base/java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java:1078)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:739)
	at java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:603)
	at org.dacapo.harness.DacapoClassLoader.loadClass(DacapoClassLoader.java:120)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:1052)
	at org.python.util.jython.run(jython.java:253)
	at org.python.util.jython.main(jython.java:129)
	... 13 more
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
<gc check: start verifying slots before local gc (197)>
<gc check: finished verifying slots before local gc (197)>
<gc check: start verifying slots after local gc (197)>
<gc check: finished verifying slots after local gc (197)>
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (397)>
<gc check: finished verifying slots before local gc (397)>
<gc check: start verifying slots after local gc (397)>
<gc check: finished verifying slots after local gc (397)>
<gc check: start verifying slots before local gc (597)>
<gc check: finished verifying slots before local gc (597)>
<gc check: start verifying slots after local gc (597)>
<gc check: finished verifying slots after local gc (597)>
<gc check: start verifying slots before local gc (797)>
<gc check: finished verifying slots before local gc (797)>
<gc check: start verifying slots after local gc (797)>
<gc check: finished verifying slots after local gc (797)>
* Round 1 done in 10.249 seconds.
<gc check: start verifying slots before local gc (997)>
<gc check: finished verifying slots before local gc (997)>
<gc check: start verifying slots after local gc (997)>
<gc check: finished verifying slots after local gc (997)>
<gc check: start verifying slots before local gc (1197)>
<gc check: finished verifying slots before local gc (1197)>
<gc check: start verifying slots after local gc (1197)>
<gc check: finished verifying slots after local gc (1197)>
<gc check: start verifying slots before local gc (1397)>
<gc check: finished verifying slots before local gc (1397)>
<gc check: start verifying slots after local gc (1397)>
<gc check: finished verifying slots after local gc (1397)>
* Round 2 done in 3.350 seconds.
<gc check: start verifying slots before local gc (1597)>
<gc check: finished verifying slots before local gc (1597)>
<gc check: start verifying slots after local gc (1597)>
<gc check: finished verifying slots after local gc (1597)>
<gc check: start verifying slots before local gc (1797)>
<gc check: finished verifying slots before local gc (1797)>
<gc check: start verifying slots after local gc (1797)>
<gc check: finished verifying slots after local gc (1797)>
<gc check: start verifying slots before local gc (1997)>
<gc check: finished verifying slots before local gc (1997)>
<gc check: start verifying slots after local gc (1997)>
<gc check: finished verifying slots after local gc (1997)>
<gc check: start verifying slots before local gc (2197)>
<gc check: finished verifying slots before local gc (2197)>
<gc check: start verifying slots after local gc (2197)>
<gc check: finished verifying slots after local gc (2197)>
* Round 3 done in 3.303 seconds.
<gc check: start verifying slots before local gc (2397)>
<gc check: finished verifying slots before local gc (2397)>
<gc check: start verifying slots after local gc (2397)>
<gc check: finished verifying slots after local gc (2397)>
<gc check: start verifying slots before local gc (2597)>
<gc check: finished verifying slots before local gc (2597)>
<gc check: start verifying slots after local gc (2597)>
<gc check: finished verifying slots after local gc (2597)>
<gc check: start verifying slots before local gc (2797)>
<gc check: finished verifying slots before local gc (2797)>
<gc check: start verifying slots after local gc (2797)>
<gc check: finished verifying slots after local gc (2797)>
* Round 4 done in 4.548 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:34:51
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     16ms     42ms    0.08us    0.000ms
           BuiltinMethodLookup:     41ms     75ms    0.07us    0.000ms
                 CompareFloats:     14ms     61ms    0.05us    0.000ms
         CompareFloatsIntegers:     18ms     50ms    0.06us    0.000ms
               CompareIntegers:     18ms     54ms    0.03us    0.000ms
        CompareInternedStrings:     29ms     77ms    0.05us    0.000ms
                  CompareLongs:     16ms     39ms    0.04us    0.000ms
                CompareStrings:     22ms     54ms    0.05us    0.000ms
                CompareUnicode:     18ms     43ms    0.06us    0.000ms
                 ConcatStrings:    124ms    262ms    0.52us    0.000ms
                 ConcatUnicode:     86ms    630ms    2.10us    0.000ms
               CreateInstances:     39ms     60ms    0.54us    0.000ms
            CreateNewInstances:     50ms     76ms    0.91us    0.000ms
       CreateStringsWithConcat:     68ms    163ms    0.16us    0.000ms
       CreateUnicodeWithConcat:     29ms     46ms    0.12us    0.000ms
                  DictCreation:     40ms     73ms    0.18us    0.000ms
             DictWithFloatKeys:     14ms     59ms    0.07us    0.000ms
           DictWithIntegerKeys:     16ms     45ms    0.04us    0.000ms
            DictWithStringKeys:     16ms     45ms    0.04us    0.000ms
                      ForLoops:     93ms    108ms    4.34us    0.000ms
                    IfThenElse:     15ms     74ms    0.05us    0.000ms
                   ListSlicing:     17ms     33ms    2.39us    0.000ms
                NestedForLoops:     79ms    177ms    0.12us    0.000ms
          NormalClassAttribute:     20ms     56ms    0.05us    0.000ms
       NormalInstanceAttribute:     18ms     53ms    0.04us    0.000ms
           PythonFunctionCalls:     32ms    145ms    0.44us    0.000ms
             PythonMethodCalls:     33ms     54ms    0.24us    0.000ms
                     Recursion:     44ms     89ms    1.78us    0.000ms
                  SecondImport:     36ms     54ms    0.54us    0.000ms
           SecondPackageImport:     38ms     45ms    0.45us    0.000ms
         SecondSubmoduleImport:     61ms     70ms    0.70us    0.000ms
       SimpleComplexArithmetic:     17ms     67ms    0.08us    0.000ms
        SimpleDictManipulation:     22ms     72ms    0.06us    0.000ms
         SimpleFloatArithmetic:     21ms    170ms    0.13us    0.000ms
      SimpleIntFloatArithmetic:     15ms     80ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     68ms    0.05us    0.000ms
        SimpleListManipulation:     35ms     83ms    0.07us    0.000ms
          SimpleLongArithmetic:     27ms     76ms    0.12us    0.000ms
                    SmallLists:     50ms     81ms    0.12us    0.000ms
                   SmallTuples:     54ms    121ms    0.22us    0.000ms
         SpecialClassAttribute:     20ms     54ms    0.05us    0.000ms
      SpecialInstanceAttribute:     19ms     53ms    0.04us    0.000ms
                StringMappings:    149ms    195ms    0.77us    0.000ms
              StringPredicates:     43ms     91ms    0.13us    0.000ms
                 StringSlicing:     52ms    203ms    0.36us    0.000ms
                     TryExcept:      1ms     21ms    0.01us    0.000ms
                TryRaiseExcept:     88ms    107ms    1.66us    0.000ms
                  TupleSlicing:     29ms    104ms    0.40us    0.000ms
               UnicodeMappings:    108ms    207ms    5.74us    0.000ms
             UnicodePredicates:     52ms     98ms    0.18us    0.000ms
             UnicodeProperties:    316ms    429ms    1.07us    0.000ms
                UnicodeSlicing:     51ms     68ms    0.14us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2345ms   5362ms

===== DaCapo 9.12-MR1 jython PASSED in 24063 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
<gc check: start verifying slots before local gc (192)>
<gc check: finished verifying slots before local gc (192)>
<gc check: start verifying slots after local gc (192)>
<gc check: finished verifying slots after local gc (192)>
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (392)>
<gc check: finished verifying slots before local gc (392)>
<gc check: start verifying slots after local gc (392)>
<gc check: finished verifying slots after local gc (392)>
<gc check: start verifying slots before local gc (592)>
<gc check: finished verifying slots before local gc (592)>
<gc check: start verifying slots after local gc (592)>
<gc check: finished verifying slots after local gc (592)>
<gc check: start verifying slots before local gc (792)>
<gc check: finished verifying slots before local gc (792)>
<gc check: start verifying slots after local gc (792)>
<gc check: finished verifying slots after local gc (792)>
* Round 1 done in 10.951 seconds.
<gc check: start verifying slots before local gc (992)>
<gc check: finished verifying slots before local gc (992)>
<gc check: start verifying slots after local gc (992)>
<gc check: finished verifying slots after local gc (992)>
<gc check: start verifying slots before local gc (1032)>
<gc check: finished verifying slots before local gc (1032)>
<gc check: start verifying slots after local gc (1192)>
<gc check: finished verifying slots after local gc (1192)>
<gc check: start verifying slots before local gc (1392)>
<gc check: finished verifying slots before local gc (1392)>
<gc check: start verifying slots after local gc (1392)>
<gc check: finished verifying slots after local gc (1392)>
<gc check: start verifying slots before local gc (1592)>
<gc check: finished verifying slots before local gc (1592)>
<gc check: start verifying slots after local gc (1592)>
<gc check: finished verifying slots after local gc (1592)>
* Round 2 done in 3.877 seconds.
<gc check: start verifying slots before local gc (1792)>
<gc check: finished verifying slots before local gc (1792)>
<gc check: start verifying slots after local gc (1792)>
<gc check: finished verifying slots after local gc (1792)>
<gc check: start verifying slots before local gc (1992)>
<gc check: finished verifying slots before local gc (1992)>
<gc check: start verifying slots after local gc (1992)>
<gc check: finished verifying slots after local gc (1992)>
<gc check: start verifying slots before local gc (2192)>
<gc check: finished verifying slots before local gc (2192)>
<gc check: start verifying slots after local gc (2192)>
<gc check: finished verifying slots after local gc (2192)>
* Round 3 done in 3.478 seconds.
<gc check: start verifying slots before local gc (2392)>
<gc check: finished verifying slots before local gc (2392)>
<gc check: start verifying slots after local gc (2392)>
<gc check: finished verifying slots after local gc (2392)>
<gc check: start verifying slots before local gc (2592)>
<gc check: finished verifying slots before local gc (2592)>
<gc check: start verifying slots after local gc (2592)>
<gc check: finished verifying slots after local gc (2592)>
<gc check: start verifying slots before local gc (2792)>
<gc check: finished verifying slots before local gc (2792)>
<gc check: start verifying slots after local gc (2792)>
<gc check: finished verifying slots after local gc (2792)>
<gc check: start verifying slots before local gc (2992)>
<gc check: finished verifying slots before local gc (2992)>
<gc check: start verifying slots after local gc (2992)>
<gc check: finished verifying slots after local gc (2992)>
* Round 4 done in 3.576 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:35:23
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     20ms     48ms    0.09us    0.000ms
           BuiltinMethodLookup:     55ms     94ms    0.09us    0.000ms
                 CompareFloats:     14ms     94ms    0.08us    0.000ms
         CompareFloatsIntegers:     18ms     52ms    0.06us    0.000ms
               CompareIntegers:     19ms     54ms    0.03us    0.000ms
        CompareInternedStrings:     29ms     77ms    0.05us    0.000ms
                  CompareLongs:     16ms     39ms    0.04us    0.000ms
                CompareStrings:     21ms     54ms    0.05us    0.000ms
                CompareUnicode:     18ms    101ms    0.13us    0.000ms
                 ConcatStrings:    153ms    429ms    0.86us    0.000ms
                 ConcatUnicode:    118ms    227ms    0.76us    0.000ms
               CreateInstances:     44ms     67ms    0.60us    0.000ms
            CreateNewInstances:     60ms     83ms    0.99us    0.000ms
       CreateStringsWithConcat:     80ms    130ms    0.13us    0.000ms
       CreateUnicodeWithConcat:     34ms    113ms    0.28us    0.000ms
                  DictCreation:     47ms    139ms    0.35us    0.000ms
             DictWithFloatKeys:     14ms     54ms    0.06us    0.000ms
           DictWithIntegerKeys:     16ms     46ms    0.04us    0.000ms
            DictWithStringKeys:     18ms     48ms    0.04us    0.000ms
                      ForLoops:     93ms    134ms    5.37us    0.000ms
                    IfThenElse:     15ms     72ms    0.05us    0.000ms
                   ListSlicing:     21ms     40ms    2.86us    0.000ms
                NestedForLoops:     81ms    112ms    0.07us    0.000ms
          NormalClassAttribute:     23ms     60ms    0.05us    0.000ms
       NormalInstanceAttribute:     20ms     58ms    0.05us    0.000ms
           PythonFunctionCalls:     40ms     95ms    0.29us    0.000ms
             PythonMethodCalls:     39ms     76ms    0.34us    0.000ms
                     Recursion:     51ms    140ms    2.79us    0.000ms
                  SecondImport:     41ms     70ms    0.70us    0.000ms
           SecondPackageImport:     39ms     57ms    0.57us    0.000ms
         SecondSubmoduleImport:     67ms    139ms    1.39us    0.000ms
       SimpleComplexArithmetic:     22ms     66ms    0.07us    0.000ms
        SimpleDictManipulation:     25ms     81ms    0.07us    0.000ms
         SimpleFloatArithmetic:     25ms    117ms    0.09us    0.000ms
      SimpleIntFloatArithmetic:     16ms     80ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     68ms    0.05us    0.000ms
        SimpleListManipulation:     36ms     84ms    0.07us    0.000ms
          SimpleLongArithmetic:     35ms     77ms    0.12us    0.000ms
                    SmallLists:     57ms     85ms    0.12us    0.000ms
                   SmallTuples:     58ms    112ms    0.21us    0.000ms
         SpecialClassAttribute:     23ms     59ms    0.05us    0.000ms
      SpecialInstanceAttribute:     21ms     58ms    0.05us    0.000ms
                StringMappings:    146ms    211ms    0.84us    0.000ms
              StringPredicates:     61ms    103ms    0.15us    0.000ms
                 StringSlicing:     59ms    211ms    0.38us    0.000ms
                     TryExcept:      1ms     17ms    0.01us    0.000ms
                TryRaiseExcept:     95ms    108ms    1.68us    0.000ms
                  TupleSlicing:     32ms     48ms    0.18us    0.000ms
               UnicodeMappings:    127ms    209ms    5.79us    0.000ms
             UnicodePredicates:     62ms    100ms    0.19us    0.000ms
             UnicodeProperties:    358ms    490ms    1.22us    0.000ms
                UnicodeSlicing:     58ms     86ms    0.18us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2657ms   5470ms

===== DaCapo 9.12-MR1 jython PASSED in 24757 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
<gc check: start verifying slots after local gc (1)>
<gc check: finished verifying slots after local gc (1)>
<gc check: start verifying slots before local gc (2)>
<gc check: finished verifying slots before local gc (2)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (193)>
<gc check: finished verifying slots before local gc (193)>
<gc check: start verifying slots after local gc (193)>
<gc check: finished verifying slots after local gc (193)>
<gc check: start verifying slots before local gc (393)>
<gc check: finished verifying slots before local gc (393)>
<gc check: start verifying slots after local gc (393)>
<gc check: finished verifying slots after local gc (393)>
<gc check: start verifying slots before local gc (593)>
<gc check: finished verifying slots before local gc (593)>
<gc check: start verifying slots after local gc (593)>
<gc check: finished verifying slots after local gc (593)>
* Round 1 done in 10.900 seconds.
<gc check: start verifying slots before local gc (793)>
<gc check: finished verifying slots before local gc (793)>
<gc check: start verifying slots after local gc (793)>
<gc check: finished verifying slots after local gc (793)>
<gc check: start verifying slots before local gc (993)>
<gc check: finished verifying slots before local gc (993)>
<gc check: start verifying slots after local gc (993)>
<gc check: finished verifying slots after local gc (993)>
<gc check: start verifying slots before local gc (1193)>
<gc check: finished verifying slots before local gc (1193)>
<gc check: start verifying slots after local gc (1193)>
<gc check: finished verifying slots after local gc (1193)>
* Round 2 done in 3.301 seconds.
<gc check: start verifying slots before local gc (1393)>
<gc check: finished verifying slots before local gc (1393)>
<gc check: start verifying slots after local gc (1393)>
<gc check: finished verifying slots after local gc (1393)>
<gc check: start verifying slots before local gc (1593)>
<gc check: finished verifying slots before local gc (1593)>
<gc check: start verifying slots after local gc (1593)>
<gc check: finished verifying slots after local gc (1593)>
* Round 3 done in 2.701 seconds.
<gc check: start verifying slots before local gc (1793)>
<gc check: finished verifying slots before local gc (1793)>
<gc check: start verifying slots after local gc (1793)>
<gc check: finished verifying slots after local gc (1793)>
<gc check: start verifying slots before local gc (1993)>
<gc check: finished verifying slots before local gc (1993)>
<gc check: start verifying slots after local gc (1993)>
<gc check: finished verifying slots after local gc (1993)>
<gc check: start verifying slots before local gc (2193)>
<gc check: finished verifying slots before local gc (2193)>
<gc check: start verifying slots after local gc (2193)>
<gc check: finished verifying slots after local gc (2193)>
* Round 4 done in 3.010 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:35:55
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     14ms     49ms    0.10us    0.000ms
           BuiltinMethodLookup:     44ms     93ms    0.09us    0.000ms
                 CompareFloats:     14ms    107ms    0.09us    0.000ms
         CompareFloatsIntegers:     17ms     55ms    0.06us    0.000ms
               CompareIntegers:     19ms     56ms    0.03us    0.000ms
        CompareInternedStrings:     29ms     80ms    0.05us    0.000ms
                  CompareLongs:     16ms     40ms    0.04us    0.000ms
                CompareStrings:     21ms     55ms    0.06us    0.000ms
                CompareUnicode:     18ms     47ms    0.06us    0.000ms
                 ConcatStrings:    113ms    317ms    0.63us    0.000ms
                 ConcatUnicode:     74ms    168ms    0.56us    0.000ms
               CreateInstances:     38ms     63ms    0.56us    0.000ms
            CreateNewInstances:     52ms     72ms    0.86us    0.000ms
       CreateStringsWithConcat:     63ms    210ms    0.21us    0.000ms
       CreateUnicodeWithConcat:     27ms     47ms    0.12us    0.000ms
                  DictCreation:     38ms     81ms    0.20us    0.000ms
             DictWithFloatKeys:     14ms     64ms    0.07us    0.000ms
           DictWithIntegerKeys:     16ms     47ms    0.04us    0.000ms
            DictWithStringKeys:     16ms     49ms    0.04us    0.000ms
                      ForLoops:     93ms    132ms    5.28us    0.000ms
                    IfThenElse:     16ms     73ms    0.05us    0.000ms
                   ListSlicing:     15ms     87ms    6.18us    0.000ms
                NestedForLoops:     78ms    127ms    0.08us    0.000ms
          NormalClassAttribute:     23ms     62ms    0.05us    0.000ms
       NormalInstanceAttribute:     20ms     57ms    0.05us    0.000ms
           PythonFunctionCalls:     33ms     60ms    0.18us    0.000ms
             PythonMethodCalls:     31ms     64ms    0.29us    0.000ms
                     Recursion:     43ms     78ms    1.56us    0.000ms
                  SecondImport:     35ms     59ms    0.59us    0.000ms
           SecondPackageImport:     37ms     43ms    0.43us    0.000ms
         SecondSubmoduleImport:     59ms     69ms    0.69us    0.000ms
       SimpleComplexArithmetic:     18ms     74ms    0.08us    0.000ms
        SimpleDictManipulation:     24ms     83ms    0.07us    0.000ms
         SimpleFloatArithmetic:     22ms    112ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     83ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     15ms     70ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     83ms    0.07us    0.000ms
          SimpleLongArithmetic:     29ms    129ms    0.20us    0.000ms
                    SmallLists:     50ms     78ms    0.12us    0.000ms
                   SmallTuples:     53ms    102ms    0.19us    0.000ms
         SpecialClassAttribute:     22ms     60ms    0.05us    0.000ms
      SpecialInstanceAttribute:     20ms     57ms    0.05us    0.000ms
                StringMappings:    151ms    208ms    0.82us    0.000ms
              StringPredicates:     45ms     85ms    0.12us    0.000ms
                 StringSlicing:     45ms    178ms    0.32us    0.000ms
                     TryExcept:      0ms     21ms    0.01us    0.000ms
                TryRaiseExcept:     84ms    113ms    1.76us    0.000ms
                  TupleSlicing:     28ms     40ms    0.15us    0.000ms
               UnicodeMappings:    107ms    164ms    4.56us    0.000ms
             UnicodePredicates:     52ms     93ms    0.17us    0.000ms
             UnicodeProperties:    288ms    453ms    1.13us    0.000ms
                UnicodeSlicing:     46ms     81ms    0.16us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2275ms   4978ms

===== DaCapo 9.12-MR1 jython PASSED in 22580 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
<gc check: start verifying slots after local gc (1)>
<gc check: finished verifying slots after local gc (1)>
<gc check: start verifying slots before local gc (2)>
<gc check: finished verifying slots before local gc (2)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
<gc check: start verifying slots before local gc (179)>
<gc check: finished verifying slots before local gc (179)>
<gc check: start verifying slots after local gc (179)>
<gc check: finished verifying slots after local gc (179)>
<gc check: start verifying slots before local gc (379)>
<gc check: finished verifying slots before local gc (379)>
<gc check: start verifying slots after local gc (379)>
<gc check: finished verifying slots after local gc (379)>
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (579)>
<gc check: finished verifying slots before local gc (579)>
<gc check: start verifying slots after local gc (579)>
<gc check: finished verifying slots after local gc (579)>
<gc check: start verifying slots before local gc (779)>
<gc check: finished verifying slots before local gc (779)>
<gc check: start verifying slots after local gc (779)>
<gc check: finished verifying slots after local gc (779)>
<gc check: start verifying slots before local gc (979)>
<gc check: finished verifying slots before local gc (979)>
<gc check: start verifying slots after local gc (979)>
<gc check: finished verifying slots after local gc (979)>
<gc check: start verifying slots before local gc (1179)>
<gc check: finished verifying slots before local gc (1179)>
<gc check: start verifying slots after local gc (1179)>
<gc check: finished verifying slots after local gc (1179)>
<gc check: start verifying slots before local gc (1379)>
<gc check: finished verifying slots before local gc (1379)>
<gc check: start verifying slots after local gc (1379)>
<gc check: finished verifying slots after local gc (1379)>
* Round 1 done in 11.768 seconds.
<gc check: start verifying slots before local gc (1579)>
<gc check: finished verifying slots before local gc (1579)>
<gc check: start verifying slots after local gc (1579)>
<gc check: finished verifying slots after local gc (1579)>
<gc check: start verifying slots before local gc (1771)>
<gc check: finished verifying slots before local gc (1771)>
<gc check: start verifying slots before local gc (1979)>
<gc check: finished verifying slots before local gc (1979)>
<gc check: start verifying slots after local gc (1979)>
<gc check: finished verifying slots after local gc (1979)>
<gc check: start verifying slots before local gc (2179)>
<gc check: finished verifying slots before local gc (2179)>
<gc check: start verifying slots after local gc (2179)>
<gc check: finished verifying slots after local gc (2179)>
<gc check: start verifying slots before local gc (2379)>
<gc check: finished verifying slots before local gc (2379)>
<gc check: start verifying slots after local gc (2379)>
<gc check: finished verifying slots after local gc (2379)>
<gc check: start verifying slots before local gc (2579)>
<gc check: finished verifying slots before local gc (2579)>
<gc check: start verifying slots after local gc (2579)>
<gc check: finished verifying slots after local gc (2579)>
* Round 2 done in 4.447 seconds.
<gc check: start verifying slots before local gc (2779)>
<gc check: finished verifying slots before local gc (2779)>
<gc check: start verifying slots after local gc (2779)>
<gc check: finished verifying slots after local gc (2779)>
<gc check: start verifying slots before local gc (2979)>
<gc check: finished verifying slots before local gc (2979)>
<gc check: start verifying slots after local gc (2979)>
<gc check: finished verifying slots after local gc (2979)>
<gc check: start verifying slots before local gc (3179)>
<gc check: finished verifying slots before local gc (3179)>
<gc check: start verifying slots after local gc (3179)>
<gc check: finished verifying slots after local gc (3179)>
<gc check: start verifying slots before local gc (3379)>
<gc check: finished verifying slots before local gc (3379)>
<gc check: start verifying slots after local gc (3379)>
<gc check: finished verifying slots after local gc (3379)>
<gc check: start verifying slots before local gc (3579)>
<gc check: finished verifying slots before local gc (3579)>
<gc check: start verifying slots after local gc (3579)>
<gc check: finished verifying slots after local gc (3579)>
<gc check: start verifying slots before local gc (3779)>
<gc check: finished verifying slots before local gc (3779)>
<gc check: start verifying slots after local gc (3779)>
<gc check: finished verifying slots after local gc (3779)>
* Round 3 done in 4.538 seconds.
<gc check: start verifying slots after local gc (3979)>
<gc check: finished verifying slots after local gc (3979)>
<gc check: start verifying slots before local gc (4179)>
<gc check: finished verifying slots before local gc (4179)>
<gc check: start verifying slots after local gc (4179)>
<gc check: finished verifying slots after local gc (4179)>
<gc check: start verifying slots before local gc (4379)>
<gc check: finished verifying slots before local gc (4379)>
<gc check: start verifying slots after local gc (4379)>
<gc check: finished verifying slots after local gc (4379)>
<gc check: start verifying slots before local gc (4579)>
<gc check: finished verifying slots before local gc (4579)>
<gc check: start verifying slots after local gc (4579)>
<gc check: finished verifying slots after local gc (4579)>
<gc check: start verifying slots after local gc (4779)>
<gc check: finished verifying slots after local gc (4779)>
<gc check: start verifying slots before local gc (4979)>
<gc check: finished verifying slots before local gc (4979)>
<gc check: start verifying slots after local gc (4979)>
<gc check: finished verifying slots after local gc (4979)>
* Round 4 done in 4.661 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:36:25
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     22ms     49ms    0.10us    0.000ms
           BuiltinMethodLookup:     52ms     86ms    0.08us    0.000ms
                 CompareFloats:     14ms     92ms    0.08us    0.000ms
         CompareFloatsIntegers:     17ms     51ms    0.06us    0.000ms
               CompareIntegers:     18ms     56ms    0.03us    0.000ms
        CompareInternedStrings:     29ms     77ms    0.05us    0.000ms
                  CompareLongs:     15ms     39ms    0.04us    0.000ms
                CompareStrings:     22ms     57ms    0.06us    0.000ms
                CompareUnicode:     18ms     45ms    0.06us    0.000ms
                 ConcatStrings:    483ms    555ms    1.11us    0.000ms
                 ConcatUnicode:    172ms    375ms    1.25us    0.000ms
               CreateInstances:     50ms     72ms    0.64us    0.000ms
            CreateNewInstances:     67ms    141ms    1.68us    0.000ms
       CreateStringsWithConcat:    127ms    230ms    0.23us    0.000ms
       CreateUnicodeWithConcat:     53ms    130ms    0.32us    0.000ms
                  DictCreation:     58ms    151ms    0.38us    0.000ms
             DictWithFloatKeys:     14ms     55ms    0.06us    0.000ms
           DictWithIntegerKeys:     16ms     48ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     50ms    0.04us    0.000ms
                      ForLoops:     93ms    169ms    6.75us    0.000ms
                    IfThenElse:     15ms     73ms    0.05us    0.000ms
                   ListSlicing:     37ms     52ms    3.71us    0.000ms
                NestedForLoops:     85ms    122ms    0.08us    0.000ms
          NormalClassAttribute:     23ms     59ms    0.05us    0.000ms
       NormalInstanceAttribute:     22ms     59ms    0.05us    0.000ms
           PythonFunctionCalls:     45ms    130ms    0.39us    0.000ms
             PythonMethodCalls:     43ms     73ms    0.32us    0.000ms
                     Recursion:     55ms     90ms    1.80us    0.000ms
                  SecondImport:     51ms    134ms    1.34us    0.000ms
           SecondPackageImport:     45ms     51ms    0.51us    0.000ms
         SecondSubmoduleImport:     72ms     88ms    0.88us    0.000ms
       SimpleComplexArithmetic:     25ms    125ms    0.14us    0.000ms
        SimpleDictManipulation:     27ms     78ms    0.06us    0.000ms
         SimpleFloatArithmetic:     27ms    122ms    0.09us    0.000ms
      SimpleIntFloatArithmetic:     16ms     84ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     25ms     85ms    0.07us    0.000ms
          SimpleLongArithmetic:     39ms     86ms    0.13us    0.000ms
                    SmallLists:     59ms     88ms    0.13us    0.000ms
                   SmallTuples:     68ms    187ms    0.35us    0.000ms
         SpecialClassAttribute:     23ms     59ms    0.05us    0.000ms
      SpecialInstanceAttribute:     20ms     55ms    0.05us    0.000ms
                StringMappings:    175ms    291ms    1.15us    0.000ms
              StringPredicates:     54ms     99ms    0.14us    0.000ms
                 StringSlicing:    105ms    188ms    0.34us    0.000ms
                     TryExcept:      0ms     20ms    0.01us    0.000ms
                TryRaiseExcept:    104ms    149ms    2.32us    0.000ms
                  TupleSlicing:     47ms     64ms    0.24us    0.000ms
               UnicodeMappings:    146ms    221ms    6.13us    0.000ms
             UnicodePredicates:     52ms     86ms    0.16us    0.000ms
             UnicodeProperties:    375ms    575ms    1.44us    0.000ms
                UnicodeSlicing:     90ms    168ms    0.34us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3343ms   6354ms

===== DaCapo 9.12-MR1 jython PASSED in 28697 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
<gc check: start verifying slots after local gc (1)>
<gc check: finished verifying slots after local gc (1)>
<gc check: start verifying slots before local gc (2)>
<gc check: finished verifying slots before local gc (2)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
<gc check: start verifying slots before local gc (190)>
<gc check: finished verifying slots before local gc (190)>
<gc check: start verifying slots after local gc (190)>
<gc check: finished verifying slots after local gc (190)>
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (390)>
<gc check: finished verifying slots before local gc (390)>
<gc check: start verifying slots after local gc (390)>
<gc check: finished verifying slots after local gc (390)>
<gc check: start verifying slots before local gc (590)>
<gc check: finished verifying slots before local gc (590)>
<gc check: start verifying slots after local gc (590)>
<gc check: finished verifying slots after local gc (590)>
<gc check: start verifying slots before local gc (790)>
<gc check: finished verifying slots before local gc (790)>
<gc check: start verifying slots after local gc (790)>
<gc check: finished verifying slots after local gc (790)>
<gc check: start verifying slots before local gc (990)>
<gc check: finished verifying slots before local gc (990)>
<gc check: start verifying slots after local gc (990)>
<gc check: finished verifying slots after local gc (990)>
<gc check: start verifying slots before local gc (1190)>
<gc check: finished verifying slots before local gc (1190)>
<gc check: start verifying slots after local gc (1190)>
<gc check: finished verifying slots after local gc (1190)>
<gc check: start verifying slots before local gc (1390)>
<gc check: finished verifying slots before local gc (1390)>
<gc check: start verifying slots after local gc (1390)>
<gc check: finished verifying slots after local gc (1390)>
* Round 1 done in 11.831 seconds.
<gc check: start verifying slots before local gc (1590)>
<gc check: finished verifying slots before local gc (1590)>
<gc check: start verifying slots after local gc (1590)>
<gc check: finished verifying slots after local gc (1590)>
<gc check: start verifying slots before local gc (1790)>
<gc check: finished verifying slots before local gc (1790)>
<gc check: start verifying slots after local gc (1790)>
<gc check: finished verifying slots after local gc (1790)>
<gc check: start verifying slots before local gc (1990)>
<gc check: finished verifying slots before local gc (1990)>
<gc check: start verifying slots after local gc (1990)>
<gc check: finished verifying slots after local gc (1990)>
<gc check: start verifying slots before local gc (2190)>
<gc check: finished verifying slots before local gc (2190)>
<gc check: start verifying slots after local gc (2190)>
<gc check: finished verifying slots after local gc (2190)>
<gc check: start verifying slots before local gc (2390)>
<gc check: finished verifying slots before local gc (2390)>
<gc check: start verifying slots after local gc (2390)>
<gc check: finished verifying slots after local gc (2390)>
<gc check: start verifying slots before local gc (2590)>
<gc check: finished verifying slots before local gc (2590)>
<gc check: start verifying slots after local gc (2590)>
<gc check: finished verifying slots after local gc (2590)>
* Round 2 done in 4.472 seconds.
<gc check: start verifying slots before local gc (2790)>
<gc check: finished verifying slots before local gc (2790)>
<gc check: start verifying slots after local gc (2790)>
<gc check: finished verifying slots after local gc (2790)>
<gc check: start verifying slots before local gc (2990)>
<gc check: finished verifying slots before local gc (2990)>
<gc check: start verifying slots after local gc (2990)>
<gc check: finished verifying slots after local gc (2990)>
<gc check: start verifying slots before local gc (3190)>
<gc check: finished verifying slots before local gc (3190)>
<gc check: start verifying slots after local gc (3190)>
<gc check: finished verifying slots after local gc (3190)>
<gc check: start verifying slots before local gc (3390)>
<gc check: finished verifying slots before local gc (3390)>
<gc check: start verifying slots after local gc (3390)>
<gc check: finished verifying slots after local gc (3390)>
<gc check: start verifying slots before local gc (3590)>
<gc check: finished verifying slots before local gc (3590)>
<gc check: start verifying slots after local gc (3590)>
<gc check: finished verifying slots after local gc (3590)>
<gc check: start verifying slots before local gc (3790)>
<gc check: finished verifying slots before local gc (3790)>
<gc check: start verifying slots after local gc (3790)>
<gc check: finished verifying slots after local gc (3790)>
* Round 3 done in 4.429 seconds.
<gc check: start verifying slots before local gc (3990)>
<gc check: finished verifying slots before local gc (3990)>
<gc check: start verifying slots after local gc (3990)>
<gc check: finished verifying slots after local gc (3990)>
<gc check: start verifying slots before local gc (4190)>
<gc check: finished verifying slots before local gc (4190)>
<gc check: start verifying slots after local gc (4190)>
<gc check: finished verifying slots after local gc (4190)>
<gc check: start verifying slots before local gc (4390)>
<gc check: finished verifying slots before local gc (4390)>
<gc check: start verifying slots after local gc (4390)>
<gc check: finished verifying slots after local gc (4390)>
<gc check: start verifying slots before local gc (4590)>
<gc check: finished verifying slots before local gc (4590)>
<gc check: start verifying slots after local gc (4590)>
<gc check: finished verifying slots after local gc (4590)>
<gc check: start verifying slots before local gc (4790)>
<gc check: finished verifying slots before local gc (4790)>
<gc check: start verifying slots after local gc (4790)>
<gc check: finished verifying slots after local gc (4790)>
<gc check: start verifying slots before local gc (4990)>
<gc check: finished verifying slots before local gc (4990)>
<gc check: start verifying slots after local gc (4990)>
<gc check: finished verifying slots after local gc (4990)>
* Round 4 done in 4.574 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:37:00
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     20ms    108ms    0.21us    0.000ms
           BuiltinMethodLookup:     47ms     83ms    0.08us    0.000ms
                 CompareFloats:     14ms    106ms    0.09us    0.000ms
         CompareFloatsIntegers:     17ms     55ms    0.06us    0.000ms
               CompareIntegers:     18ms     55ms    0.03us    0.000ms
        CompareInternedStrings:     28ms     80ms    0.05us    0.000ms
                  CompareLongs:     16ms     39ms    0.04us    0.000ms
                CompareStrings:     21ms     55ms    0.06us    0.000ms
                CompareUnicode:     17ms     44ms    0.06us    0.000ms
                 ConcatStrings:    466ms    550ms    1.10us    0.000ms
                 ConcatUnicode:    169ms    283ms    0.94us    0.000ms
               CreateInstances:     47ms    128ms    1.14us    0.000ms
            CreateNewInstances:     66ms     84ms    1.00us    0.000ms
       CreateStringsWithConcat:    112ms    258ms    0.26us    0.000ms
       CreateUnicodeWithConcat:     44ms    120ms    0.30us    0.000ms
                  DictCreation:     52ms     86ms    0.22us    0.000ms
             DictWithFloatKeys:     14ms     59ms    0.07us    0.000ms
           DictWithIntegerKeys:     16ms     47ms    0.04us    0.000ms
            DictWithStringKeys:     16ms     46ms    0.04us    0.000ms
                      ForLoops:     94ms    110ms    4.40us    0.000ms
                    IfThenElse:     14ms     72ms    0.05us    0.000ms
                   ListSlicing:     30ms    100ms    7.18us    0.000ms
                NestedForLoops:     85ms    100ms    0.07us    0.000ms
          NormalClassAttribute:     23ms     65ms    0.05us    0.000ms
       NormalInstanceAttribute:     20ms     54ms    0.05us    0.000ms
           PythonFunctionCalls:     39ms    100ms    0.30us    0.000ms
             PythonMethodCalls:     45ms    141ms    0.63us    0.000ms
                     Recursion:     50ms     84ms    1.68us    0.000ms
                  SecondImport:     42ms     71ms    0.71us    0.000ms
           SecondPackageImport:     49ms     58ms    0.58us    0.000ms
         SecondSubmoduleImport:     68ms    153ms    1.53us    0.000ms
       SimpleComplexArithmetic:     22ms     76ms    0.09us    0.000ms
        SimpleDictManipulation:     25ms     84ms    0.07us    0.000ms
         SimpleFloatArithmetic:     26ms    121ms    0.09us    0.000ms
      SimpleIntFloatArithmetic:     16ms     84ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     15ms     66ms    0.05us    0.000ms
        SimpleListManipulation:     37ms     90ms    0.08us    0.000ms
          SimpleLongArithmetic:     34ms    145ms    0.22us    0.000ms
                    SmallLists:     61ms     89ms    0.13us    0.000ms
                   SmallTuples:     61ms    130ms    0.24us    0.000ms
         SpecialClassAttribute:     23ms     52ms    0.04us    0.000ms
      SpecialInstanceAttribute:     20ms     55ms    0.05us    0.000ms
                StringMappings:    166ms    285ms    1.13us    0.000ms
              StringPredicates:     51ms     94ms    0.13us    0.000ms
                 StringSlicing:    102ms    234ms    0.42us    0.000ms
                     TryExcept:      1ms     15ms    0.01us    0.000ms
                TryRaiseExcept:     98ms    115ms    1.80us    0.000ms
                  TupleSlicing:     42ms    118ms    0.45us    0.000ms
               UnicodeMappings:    123ms    162ms    4.51us    0.000ms
             UnicodePredicates:     56ms    157ms    0.29us    0.000ms
             UnicodeProperties:    368ms    532ms    1.33us    0.000ms
                UnicodeSlicing:     87ms    226ms    0.46us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3193ms   6327ms

===== DaCapo 9.12-MR1 jython PASSED in 28028 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
<gc check: start verifying slots after local gc (1)>
<gc check: finished verifying slots after local gc (1)>
<gc check: start verifying slots before local gc (2)>
<gc check: finished verifying slots before local gc (2)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

<gc check: start verifying slots before local gc (196)>
<gc check: finished verifying slots before local gc (196)>
<gc check: start verifying slots after local gc (196)>
<gc check: finished verifying slots after local gc (196)>
<gc check: start verifying slots before local gc (396)>
<gc check: finished verifying slots before local gc (396)>
<gc check: start verifying slots after local gc (396)>
<gc check: finished verifying slots after local gc (396)>
<gc check: start verifying slots before local gc (596)>
<gc check: finished verifying slots before local gc (596)>
<gc check: start verifying slots after local gc (596)>
<gc check: finished verifying slots after local gc (596)>
* Round 1 done in 10.425 seconds.
<gc check: start verifying slots before local gc (796)>
<gc check: finished verifying slots before local gc (796)>
<gc check: start verifying slots after local gc (796)>
<gc check: finished verifying slots after local gc (796)>
<gc check: start verifying slots before local gc (996)>
<gc check: finished verifying slots before local gc (996)>
<gc check: start verifying slots after local gc (996)>
<gc check: finished verifying slots after local gc (996)>
<gc check: start verifying slots before local gc (1196)>
<gc check: finished verifying slots before local gc (1196)>
<gc check: start verifying slots after local gc (1196)>
<gc check: finished verifying slots after local gc (1196)>
* Round 2 done in 3.403 seconds.
<gc check: start verifying slots before local gc (1396)>
<gc check: finished verifying slots before local gc (1396)>
<gc check: start verifying slots after local gc (1396)>
<gc check: finished verifying slots after local gc (1396)>
<gc check: start verifying slots before local gc (1596)>
<gc check: finished verifying slots before local gc (1596)>
<gc check: start verifying slots after local gc (1596)>
<gc check: finished verifying slots after local gc (1596)>
* Round 3 done in 2.779 seconds.
<gc check: start verifying slots before local gc (1796)>
<gc check: finished verifying slots before local gc (1796)>
<gc check: start verifying slots after local gc (1796)>
<gc check: finished verifying slots after local gc (1796)>
<gc check: start verifying slots before local gc (1996)>
<gc check: finished verifying slots before local gc (1996)>
<gc check: start verifying slots after local gc (1996)>
<gc check: finished verifying slots after local gc (1996)>
<gc check: start verifying slots before local gc (2196)>
<gc check: finished verifying slots before local gc (2196)>
<gc check: start verifying slots after local gc (2196)>
<gc check: finished verifying slots after local gc (2196)>
* Round 4 done in 2.976 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-15 20:37:36
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     15ms     50ms    0.10us    0.000ms
           BuiltinMethodLookup:     49ms     75ms    0.07us    0.000ms
                 CompareFloats:     13ms     61ms    0.05us    0.000ms
         CompareFloatsIntegers:     17ms     44ms    0.05us    0.000ms
               CompareIntegers:     17ms     55ms    0.03us    0.000ms
        CompareInternedStrings:     28ms     79ms    0.05us    0.000ms
                  CompareLongs:     15ms     38ms    0.04us    0.000ms
                CompareStrings:     21ms     54ms    0.05us    0.000ms
                CompareUnicode:     20ms     47ms    0.06us    0.000ms
                 ConcatStrings:    114ms    320ms    0.64us    0.000ms
                 ConcatUnicode:     75ms    122ms    0.41us    0.000ms
               CreateInstances:     36ms     60ms    0.54us    0.000ms
            CreateNewInstances:     50ms    128ms    1.52us    0.000ms
       CreateStringsWithConcat:     64ms    166ms    0.17us    0.000ms
       CreateUnicodeWithConcat:     28ms     49ms    0.12us    0.000ms
                  DictCreation:     38ms     79ms    0.20us    0.000ms
             DictWithFloatKeys:     14ms     56ms    0.06us    0.000ms
           DictWithIntegerKeys:     16ms     46ms    0.04us    0.000ms
            DictWithStringKeys:     16ms     48ms    0.04us    0.000ms
                      ForLoops:     92ms    131ms    5.23us    0.000ms
                    IfThenElse:     14ms     70ms    0.05us    0.000ms
                   ListSlicing:     17ms     90ms    6.45us    0.000ms
                NestedForLoops:     79ms    120ms    0.08us    0.000ms
          NormalClassAttribute:     21ms     57ms    0.05us    0.000ms
       NormalInstanceAttribute:     18ms     53ms    0.04us    0.000ms
           PythonFunctionCalls:     35ms     83ms    0.25us    0.000ms
             PythonMethodCalls:     31ms     55ms    0.24us    0.000ms
                     Recursion:     41ms     87ms    1.73us    0.000ms
                  SecondImport:     36ms    129ms    1.29us    0.000ms
           SecondPackageImport:     37ms     44ms    0.44us    0.000ms
         SecondSubmoduleImport:     60ms     73ms    0.73us    0.000ms
       SimpleComplexArithmetic:     18ms     63ms    0.07us    0.000ms
        SimpleDictManipulation:     22ms     83ms    0.07us    0.000ms
         SimpleFloatArithmetic:     22ms    105ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     15ms     81ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     15ms     68ms    0.05us    0.000ms
        SimpleListManipulation:     35ms     79ms    0.07us    0.000ms
          SimpleLongArithmetic:     29ms     70ms    0.11us    0.000ms
                    SmallLists:     52ms     80ms    0.12us    0.000ms
                   SmallTuples:     53ms    142ms    0.26us    0.000ms
         SpecialClassAttribute:     22ms     58ms    0.05us    0.000ms
      SpecialInstanceAttribute:     18ms     54ms    0.04us    0.000ms
                StringMappings:    138ms    184ms    0.73us    0.000ms
              StringPredicates:     46ms     88ms    0.13us    0.000ms
                 StringSlicing:     48ms    131ms    0.23us    0.000ms
                     TryExcept:      1ms     22ms    0.01us    0.000ms
                TryRaiseExcept:     83ms    153ms    2.39us    0.000ms
                  TupleSlicing:     28ms     43ms    0.16us    0.000ms
               UnicodeMappings:    120ms    148ms    4.11us    0.000ms
             UnicodePredicates:     54ms     97ms    0.18us    0.000ms
             UnicodeProperties:    307ms    453ms    1.13us    0.000ms
                UnicodeSlicing:     49ms    125ms    0.26us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2302ms   4896ms

===== DaCapo 9.12-MR1 jython PASSED in 21988 msec =====
<gc check installed>
<gc check: start verifying slots before local gc (1)>
<gc check: finished verifying slots before local gc (1)>
<gc check: start verifying slots after local gc (1)>
<gc check: finished verifying slots after local gc (1)>
<gc check: start verifying slots before local gc (2)>
<gc check: finished verifying slots before local gc (2)>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
JVMDUMP039I Processing dump event "systhrow", detail "java/lang/OutOfMemoryError" at 2019/06/15 20:38:03 - please wait.
JVMDUMP032I JVM requested System dump using '/vagrant/core.20190615.203803.18349.0001.dmp' in response to an event
JVMPORT030W /proc/sys/kernel/core_pattern setting "|/usr/share/apport/apport %p %s %c %d %P" specifies that the core dump is to be piped to an external program.  Attempting to rename either core or core.18381.

JVMDUMP010I System dump written to /vagrant/core.20190615.203803.18349.0001.dmp
JVMDUMP032I JVM requested Heap dump using '/vagrant/heapdump.20190615.203803.18349.0002.phd' in response to an event
JVMDUMP010I Heap dump written to /vagrant/heapdump.20190615.203803.18349.0002.phd
JVMDUMP032I JVM requested Java dump using '/vagrant/javacore.20190615.203803.18349.0003.txt' in response to an event
JVMDUMP010I Java dump written to /vagrant/javacore.20190615.203803.18349.0003.txt
JVMDUMP032I JVM requested Snap dump using '/vagrant/Snap.20190615.203803.18349.0004.trc' in response to an event
JVMDUMP010I Snap dump written to /vagrant/Snap.20190615.203803.18349.0004.trc
JVMDUMP013I Processed dump event "systhrow", detail "java/lang/OutOfMemoryError".
Traceback (most recent call last):
  File "/vagrant/./scratch/jython/pybench/pybench.py", line 37, in <module>
    import sys, time, operator, string
  File "/vagrant/scratch/jython/Lib/string.py", line 81, in <module>
    import re as _re
java.lang.OutOfMemoryError: Java heap space
	at java.base/java.lang.ClassLoader.defineClassImpl(Native Method)
	at java.base/java.lang.ClassLoader.defineClassInternal(ClassLoader.java:479)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:448)
	at org.python.core.BytecodeLoader$Loader.loadClassFromBytes(BytecodeLoader.java:119)
	at org.python.core.BytecodeLoader.makeClass(BytecodeLoader.java:37)
	at org.python.core.BytecodeLoader.makeCode(BytecodeLoader.java:67)
	at org.python.core.imp.createFromSource(imp.java:348)
	at org.python.core.imp.loadFromSource(imp.java:573)
	at org.python.core.imp.find_module(imp.java:473)
	at org.python.core.imp.import_next(imp.java:713)
	at org.python.core.imp.import_name(imp.java:824)
	at org.python.core.imp.importName(imp.java:884)
	at org.python.core.ImportFunction.__call__(__builtin__.java:1220)
	at org.python.core.PyObject.__call__(PyObject.java:357)
	at org.python.core.__builtin__.__import__(__builtin__.java:1173)
	at org.python.core.imp.importOneAs(imp.java:921)
	at string$py.f$0(/vagrant/scratch/jython/Lib/string.py:529)
	at string$py.call_function(/vagrant/scratch/jython/Lib/string.py)
	at org.python.core.PyTableCode.call(PyTableCode.java:165)
	at org.python.core.PyCode.call(PyCode.java:18)
	at org.python.core.imp.createFromCode(imp.java:386)
	at org.python.core.imp.createFromSource(imp.java:349)
	at org.python.core.imp.loadFromSource(imp.java:573)
	at org.python.core.imp.find_module(imp.java:473)
	at org.python.core.imp.import_next(imp.java:713)
	at org.python.core.imp.import_name(imp.java:824)
	at org.python.core.imp.importName(imp.java:884)
	at org.python.core.ImportFunction.__call__(__builtin__.java:1220)
	at org.python.core.PyObject.__call__(PyObject.java:357)
	at org.python.core.__builtin__.__import__(__builtin__.java:1173)
	at org.python.core.imp.importOne(imp.java:903)
	at org.python.pycode._pyx1.f$0(/vagrant/./scratch/jython/pybench/pybench.py:946)
	at org.python.pycode._pyx1.call_function(/vagrant/./scratch/jython/pybench/pybench.py)
	at org.python.core.PyTableCode.call(PyTableCode.java:165)
	at org.python.core.PyCode.call(PyCode.java:18)
	at org.python.core.Py.runCode(Py.java:1261)
	at org.python.util.PythonInterpreter.execfile(PythonInterpreter.java:235)
	at org.python.util.jython.run(jython.java:247)
	at org.python.util.jython.main(jython.java:129)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.dacapo.harness.Jython.iterate(Jython.java:50)
	at org.dacapo.harness.Benchmark.run(Benchmark.java:187)
	at org.dacapo.harness.TestHarness.runBenchmark(TestHarness.java:199)
	at org.dacapo.harness.TestHarness.main(TestHarness.java:152)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at Harness.main(Unknown Source)

java.lang.OutOfMemoryError: java.lang.OutOfMemoryError: Java heap space
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.780 seconds.
* Round 2 done in 3.513 seconds.
* Round 3 done in 3.265 seconds.
* Round 4 done in 3.112 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:31:47
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     18ms     49ms    0.10us    0.000ms
           BuiltinMethodLookup:     44ms     96ms    0.09us    0.000ms
                 CompareFloats:     14ms     96ms    0.08us    0.000ms
         CompareFloatsIntegers:     18ms     51ms    0.06us    0.000ms
               CompareIntegers:     18ms     55ms    0.03us    0.000ms
        CompareInternedStrings:     34ms     82ms    0.05us    0.000ms
                  CompareLongs:     15ms     38ms    0.04us    0.000ms
                CompareStrings:     26ms     59ms    0.06us    0.000ms
                CompareUnicode:     21ms     48ms    0.06us    0.000ms
                 ConcatStrings:    266ms    375ms    0.75us    0.000ms
                 ConcatUnicode:    158ms    201ms    0.67us    0.000ms
               CreateInstances:     79ms    100ms    0.90us    0.000ms
            CreateNewInstances:     87ms    157ms    1.87us    0.000ms
       CreateStringsWithConcat:     89ms    146ms    0.15us    0.000ms
       CreateUnicodeWithConcat:     44ms     67ms    0.17us    0.000ms
                  DictCreation:     95ms    135ms    0.34us    0.000ms
             DictWithFloatKeys:     14ms     68ms    0.08us    0.000ms
           DictWithIntegerKeys:     16ms     45ms    0.04us    0.000ms
            DictWithStringKeys:     16ms     35ms    0.03us    0.000ms
                      ForLoops:     92ms    124ms    4.96us    0.000ms
                    IfThenElse:     16ms     76ms    0.06us    0.000ms
                   ListSlicing:     20ms     40ms    2.84us    0.000ms
                NestedForLoops:     80ms     96ms    0.06us    0.000ms
          NormalClassAttribute:     23ms     59ms    0.05us    0.000ms
       NormalInstanceAttribute:     23ms     59ms    0.05us    0.000ms
           PythonFunctionCalls:     38ms     96ms    0.29us    0.000ms
             PythonMethodCalls:     37ms     76ms    0.34us    0.000ms
                     Recursion:     38ms     94ms    1.88us    0.000ms
                  SecondImport:     39ms     85ms    0.85us    0.000ms
           SecondPackageImport:     41ms     47ms    0.47us    0.000ms
         SecondSubmoduleImport:     72ms     81ms    0.81us    0.000ms
       SimpleComplexArithmetic:     18ms     66ms    0.08us    0.000ms
        SimpleDictManipulation:     54ms    120ms    0.10us    0.000ms
         SimpleFloatArithmetic:     23ms    107ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     78ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     15ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     35ms     81ms    0.07us    0.000ms
          SimpleLongArithmetic:     31ms     75ms    0.11us    0.000ms
                    SmallLists:     66ms     95ms    0.14us    0.000ms
                   SmallTuples:     66ms    128ms    0.24us    0.000ms
         SpecialClassAttribute:     22ms     58ms    0.05us    0.000ms
      SpecialInstanceAttribute:     24ms     59ms    0.05us    0.000ms
                StringMappings:    185ms    227ms    0.90us    0.000ms
              StringPredicates:     52ms    103ms    0.15us    0.000ms
                 StringSlicing:     88ms    120ms    0.21us    0.000ms
                     TryExcept:      1ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     88ms    110ms    1.72us    0.000ms
                  TupleSlicing:     39ms     53ms    0.20us    0.000ms
               UnicodeMappings:    116ms    155ms    4.31us    0.000ms
             UnicodePredicates:     53ms     85ms    0.16us    0.000ms
             UnicodeProperties:    340ms    417ms    1.04us    0.000ms
                UnicodeSlicing:     80ms    110ms    0.22us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3003ms   5168ms

===== DaCapo 9.12-MR1 jython PASSED in 23198 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.094 seconds.
* Round 2 done in 3.290 seconds.
* Round 3 done in 3.277 seconds.
* Round 4 done in 3.240 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:32:18
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     19ms     59ms    0.12us    0.000ms
           BuiltinMethodLookup:     36ms     76ms    0.07us    0.000ms
                 CompareFloats:     14ms     60ms    0.05us    0.000ms
         CompareFloatsIntegers:     18ms     44ms    0.05us    0.000ms
               CompareIntegers:     18ms     56ms    0.03us    0.000ms
        CompareInternedStrings:     37ms     84ms    0.06us    0.000ms
                  CompareLongs:     15ms     38ms    0.04us    0.000ms
                CompareStrings:     26ms     63ms    0.06us    0.000ms
                CompareUnicode:     21ms     48ms    0.06us    0.000ms
                 ConcatStrings:    310ms    378ms    0.76us    0.000ms
                 ConcatUnicode:    196ms    240ms    0.80us    0.000ms
               CreateInstances:     81ms    106ms    0.94us    0.000ms
            CreateNewInstances:     91ms    110ms    1.31us    0.000ms
       CreateStringsWithConcat:    109ms    155ms    0.16us    0.000ms
       CreateUnicodeWithConcat:     46ms     63ms    0.16us    0.000ms
                  DictCreation:     99ms    133ms    0.33us    0.000ms
             DictWithFloatKeys:     16ms     47ms    0.05us    0.000ms
           DictWithIntegerKeys:     18ms     47ms    0.04us    0.000ms
            DictWithStringKeys:     18ms     49ms    0.04us    0.000ms
                      ForLoops:     93ms    127ms    5.07us    0.000ms
                    IfThenElse:     16ms     75ms    0.06us    0.000ms
                   ListSlicing:     28ms     49ms    3.48us    0.000ms
                NestedForLoops:     80ms     99ms    0.07us    0.000ms
          NormalClassAttribute:     23ms     57ms    0.05us    0.000ms
       NormalInstanceAttribute:     20ms     54ms    0.04us    0.000ms
           PythonFunctionCalls:     44ms     75ms    0.23us    0.000ms
             PythonMethodCalls:     35ms     63ms    0.28us    0.000ms
                     Recursion:     44ms     64ms    1.27us    0.000ms
                  SecondImport:     39ms     71ms    0.71us    0.000ms
           SecondPackageImport:     42ms     48ms    0.48us    0.000ms
         SecondSubmoduleImport:     70ms     80ms    0.80us    0.000ms
       SimpleComplexArithmetic:     17ms     60ms    0.07us    0.000ms
        SimpleDictManipulation:     54ms    116ms    0.10us    0.000ms
         SimpleFloatArithmetic:     20ms    107ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     80ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     66ms    0.05us    0.000ms
        SimpleListManipulation:     35ms     73ms    0.06us    0.000ms
          SimpleLongArithmetic:     24ms     82ms    0.12us    0.000ms
                    SmallLists:     67ms     96ms    0.14us    0.000ms
                   SmallTuples:     66ms    125ms    0.23us    0.000ms
         SpecialClassAttribute:     23ms     62ms    0.05us    0.000ms
      SpecialInstanceAttribute:     21ms     55ms    0.05us    0.000ms
                StringMappings:    178ms    217ms    0.86us    0.000ms
              StringPredicates:     40ms     88ms    0.13us    0.000ms
                 StringSlicing:     98ms    120ms    0.22us    0.000ms
                     TryExcept:      0ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     92ms    101ms    1.58us    0.000ms
                  TupleSlicing:     43ms     52ms    0.20us    0.000ms
               UnicodeMappings:    116ms    151ms    4.19us    0.000ms
             UnicodePredicates:     43ms     76ms    0.14us    0.000ms
             UnicodeProperties:    338ms    402ms    1.01us    0.000ms
                UnicodeSlicing:     88ms    109ms    0.22us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3117ms   4975ms

===== DaCapo 9.12-MR1 jython PASSED in 22495 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.052 seconds.
* Round 2 done in 3.169 seconds.
* Round 3 done in 3.007 seconds.
* Round 4 done in 3.292 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:32:49
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     18ms     47ms    0.09us    0.000ms
           BuiltinMethodLookup:     38ms     77ms    0.07us    0.000ms
                 CompareFloats:     14ms     59ms    0.05us    0.000ms
         CompareFloatsIntegers:     18ms     42ms    0.05us    0.000ms
               CompareIntegers:     17ms     53ms    0.03us    0.000ms
        CompareInternedStrings:     35ms     82ms    0.05us    0.000ms
                  CompareLongs:     16ms     39ms    0.04us    0.000ms
                CompareStrings:     26ms     60ms    0.06us    0.000ms
                CompareUnicode:     22ms     48ms    0.06us    0.000ms
                 ConcatStrings:    252ms    344ms    0.69us    0.000ms
                 ConcatUnicode:    152ms    202ms    0.67us    0.000ms
               CreateInstances:     81ms     97ms    0.86us    0.000ms
            CreateNewInstances:     84ms    107ms    1.27us    0.000ms
       CreateStringsWithConcat:     93ms    140ms    0.14us    0.000ms
       CreateUnicodeWithConcat:     37ms     56ms    0.14us    0.000ms
                  DictCreation:     93ms    127ms    0.32us    0.000ms
             DictWithFloatKeys:     14ms     42ms    0.05us    0.000ms
           DictWithIntegerKeys:     16ms     45ms    0.04us    0.000ms
            DictWithStringKeys:     16ms     47ms    0.04us    0.000ms
                      ForLoops:     90ms    123ms    4.90us    0.000ms
                    IfThenElse:     15ms     71ms    0.05us    0.000ms
                   ListSlicing:     19ms     34ms    2.45us    0.000ms
                NestedForLoops:     76ms     85ms    0.06us    0.000ms
          NormalClassAttribute:     22ms     62ms    0.05us    0.000ms
       NormalInstanceAttribute:     20ms     53ms    0.04us    0.000ms
           PythonFunctionCalls:     40ms     95ms    0.29us    0.000ms
             PythonMethodCalls:     37ms     72ms    0.32us    0.000ms
                     Recursion:     41ms    120ms    2.40us    0.000ms
                  SecondImport:     37ms     63ms    0.63us    0.000ms
           SecondPackageImport:     37ms     52ms    0.52us    0.000ms
         SecondSubmoduleImport:     90ms     96ms    0.96us    0.000ms
       SimpleComplexArithmetic:     18ms     62ms    0.07us    0.000ms
        SimpleDictManipulation:     54ms    117ms    0.10us    0.000ms
         SimpleFloatArithmetic:     22ms    109ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     15ms     77ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     78ms    0.07us    0.000ms
          SimpleLongArithmetic:     28ms     78ms    0.12us    0.000ms
                    SmallLists:     65ms     95ms    0.14us    0.000ms
                   SmallTuples:     69ms    129ms    0.24us    0.000ms
         SpecialClassAttribute:     22ms     58ms    0.05us    0.000ms
      SpecialInstanceAttribute:     20ms     54ms    0.04us    0.000ms
                StringMappings:    181ms    210ms    0.83us    0.000ms
              StringPredicates:     40ms     89ms    0.13us    0.000ms
                 StringSlicing:     82ms    110ms    0.20us    0.000ms
                     TryExcept:      1ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     88ms    100ms    1.56us    0.000ms
                  TupleSlicing:     40ms     50ms    0.19us    0.000ms
               UnicodeMappings:    113ms    148ms    4.12us    0.000ms
             UnicodePredicates:     42ms     83ms    0.15us    0.000ms
             UnicodeProperties:    330ms    399ms    1.00us    0.000ms
                UnicodeSlicing:     73ms    106ms    0.22us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2919ms   4880ms

===== DaCapo 9.12-MR1 jython PASSED in 21946 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.478 seconds.
* Round 2 done in 3.357 seconds.
* Round 3 done in 3.073 seconds.
* Round 4 done in 2.926 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:33:19
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     18ms     52ms    0.10us    0.000ms
           BuiltinMethodLookup:     35ms     74ms    0.07us    0.000ms
                 CompareFloats:     15ms     59ms    0.05us    0.000ms
         CompareFloatsIntegers:     18ms     42ms    0.05us    0.000ms
               CompareIntegers:     19ms     55ms    0.03us    0.000ms
        CompareInternedStrings:     35ms     55ms    0.04us    0.000ms
                  CompareLongs:     16ms     39ms    0.04us    0.000ms
                CompareStrings:     26ms     58ms    0.06us    0.000ms
                CompareUnicode:     21ms     46ms    0.06us    0.000ms
                 ConcatStrings:    269ms    358ms    0.72us    0.000ms
                 ConcatUnicode:    157ms    226ms    0.75us    0.000ms
               CreateInstances:     82ms    107ms    0.96us    0.000ms
            CreateNewInstances:     84ms    105ms    1.25us    0.000ms
       CreateStringsWithConcat:     90ms    147ms    0.15us    0.000ms
       CreateUnicodeWithConcat:     43ms     64ms    0.16us    0.000ms
                  DictCreation:     91ms    126ms    0.32us    0.000ms
             DictWithFloatKeys:     15ms     44ms    0.05us    0.000ms
           DictWithIntegerKeys:     16ms     45ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     46ms    0.04us    0.000ms
                      ForLoops:     92ms    123ms    4.90us    0.000ms
                    IfThenElse:     15ms     72ms    0.05us    0.000ms
                   ListSlicing:     25ms     41ms    2.93us    0.000ms
                NestedForLoops:     79ms    148ms    0.10us    0.000ms
          NormalClassAttribute:     22ms     63ms    0.05us    0.000ms
       NormalInstanceAttribute:     20ms     55ms    0.05us    0.000ms
           PythonFunctionCalls:     42ms     97ms    0.29us    0.000ms
             PythonMethodCalls:     30ms     72ms    0.32us    0.000ms
                     Recursion:     40ms    116ms    2.32us    0.000ms
                  SecondImport:     42ms     64ms    0.64us    0.000ms
           SecondPackageImport:     36ms     46ms    0.46us    0.000ms
         SecondSubmoduleImport:     63ms     76ms    0.76us    0.000ms
       SimpleComplexArithmetic:     13ms     58ms    0.07us    0.000ms
        SimpleDictManipulation:     54ms    112ms    0.09us    0.000ms
         SimpleFloatArithmetic:     17ms    104ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     78ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     15ms     70ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     76ms    0.06us    0.000ms
          SimpleLongArithmetic:     25ms     66ms    0.10us    0.000ms
                    SmallLists:     68ms    100ms    0.15us    0.000ms
                   SmallTuples:     66ms    125ms    0.23us    0.000ms
         SpecialClassAttribute:     22ms     59ms    0.05us    0.000ms
      SpecialInstanceAttribute:     20ms     54ms    0.05us    0.000ms
                StringMappings:    171ms    214ms    0.85us    0.000ms
              StringPredicates:     42ms     93ms    0.13us    0.000ms
                 StringSlicing:     76ms    119ms    0.21us    0.000ms
                     TryExcept:      1ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     85ms    103ms    1.61us    0.000ms
                  TupleSlicing:     37ms     52ms    0.20us    0.000ms
               UnicodeMappings:    109ms    145ms    4.02us    0.000ms
             UnicodePredicates:     41ms     92ms    0.17us    0.000ms
             UnicodeProperties:    320ms    393ms    0.98us    0.000ms
                UnicodeSlicing:     74ms    102ms    0.21us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2879ms   4958ms

===== DaCapo 9.12-MR1 jython PASSED in 22410 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.248 seconds.
* Round 2 done in 3.373 seconds.
* Round 3 done in 3.412 seconds.
* Round 4 done in 3.389 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:33:48
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     19ms     49ms    0.10us    0.000ms
           BuiltinMethodLookup:     45ms     86ms    0.08us    0.000ms
                 CompareFloats:     15ms     43ms    0.04us    0.000ms
         CompareFloatsIntegers:     18ms     46ms    0.05us    0.000ms
               CompareIntegers:     19ms     55ms    0.03us    0.000ms
        CompareInternedStrings:     37ms     88ms    0.06us    0.000ms
                  CompareLongs:     17ms     39ms    0.04us    0.000ms
                CompareStrings:     28ms     61ms    0.06us    0.000ms
                CompareUnicode:     23ms     49ms    0.06us    0.000ms
                 ConcatStrings:    315ms    381ms    0.76us    0.000ms
                 ConcatUnicode:    205ms    218ms    0.73us    0.000ms
               CreateInstances:     89ms    105ms    0.94us    0.000ms
            CreateNewInstances:     90ms    111ms    1.32us    0.000ms
       CreateStringsWithConcat:    122ms    158ms    0.16us    0.000ms
       CreateUnicodeWithConcat:     50ms     76ms    0.19us    0.000ms
                  DictCreation:    101ms    139ms    0.35us    0.000ms
             DictWithFloatKeys:     14ms     54ms    0.06us    0.000ms
           DictWithIntegerKeys:     17ms     46ms    0.04us    0.000ms
            DictWithStringKeys:     18ms     47ms    0.04us    0.000ms
                      ForLoops:     92ms    125ms    4.99us    0.000ms
                    IfThenElse:     16ms     71ms    0.05us    0.000ms
                   ListSlicing:     30ms     35ms    2.50us    0.000ms
                NestedForLoops:     78ms    131ms    0.09us    0.000ms
          NormalClassAttribute:     23ms     59ms    0.05us    0.000ms
       NormalInstanceAttribute:     19ms     54ms    0.05us    0.000ms
           PythonFunctionCalls:     43ms     95ms    0.29us    0.000ms
             PythonMethodCalls:     33ms     67ms    0.30us    0.000ms
                     Recursion:     46ms    135ms    2.70us    0.000ms
                  SecondImport:     39ms     66ms    0.66us    0.000ms
           SecondPackageImport:     40ms     53ms    0.53us    0.000ms
         SecondSubmoduleImport:     69ms     80ms    0.80us    0.000ms
       SimpleComplexArithmetic:     17ms     60ms    0.07us    0.000ms
        SimpleDictManipulation:     55ms    119ms    0.10us    0.000ms
         SimpleFloatArithmetic:     20ms    103ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     75ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     66ms    0.05us    0.000ms
        SimpleListManipulation:     35ms     78ms    0.07us    0.000ms
          SimpleLongArithmetic:     25ms     77ms    0.12us    0.000ms
                    SmallLists:     68ms    100ms    0.15us    0.000ms
                   SmallTuples:     70ms    121ms    0.22us    0.000ms
         SpecialClassAttribute:     23ms     58ms    0.05us    0.000ms
      SpecialInstanceAttribute:     20ms     55ms    0.05us    0.000ms
                StringMappings:    187ms    215ms    0.85us    0.000ms
              StringPredicates:     48ms     90ms    0.13us    0.000ms
                 StringSlicing:     90ms    113ms    0.20us    0.000ms
                     TryExcept:      1ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     91ms    106ms    1.66us    0.000ms
                  TupleSlicing:     42ms     54ms    0.21us    0.000ms
               UnicodeMappings:    108ms    147ms    4.09us    0.000ms
             UnicodePredicates:     70ms    104ms    0.19us    0.000ms
             UnicodeProperties:    344ms    416ms    1.04us    0.000ms
                UnicodeSlicing:     82ms    108ms    0.22us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3198ms   5105ms

===== DaCapo 9.12-MR1 jython PASSED in 22948 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.034 seconds.
* Round 2 done in 3.317 seconds.
* Round 3 done in 3.172 seconds.
* Round 4 done in 3.259 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:34:19
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     20ms     72ms    0.14us    0.000ms
           BuiltinMethodLookup:     46ms     85ms    0.08us    0.000ms
                 CompareFloats:     15ms     62ms    0.05us    0.000ms
         CompareFloatsIntegers:     19ms     43ms    0.05us    0.000ms
               CompareIntegers:     20ms     56ms    0.03us    0.000ms
        CompareInternedStrings:     36ms     82ms    0.05us    0.000ms
                  CompareLongs:     16ms     38ms    0.04us    0.000ms
                CompareStrings:     28ms     61ms    0.06us    0.000ms
                CompareUnicode:     21ms     46ms    0.06us    0.000ms
                 ConcatStrings:    328ms    370ms    0.74us    0.000ms
                 ConcatUnicode:    204ms    223ms    0.74us    0.000ms
               CreateInstances:     85ms    104ms    0.93us    0.000ms
            CreateNewInstances:     89ms    106ms    1.26us    0.000ms
       CreateStringsWithConcat:     95ms    144ms    0.14us    0.000ms
       CreateUnicodeWithConcat:     42ms     61ms    0.15us    0.000ms
                  DictCreation:     95ms    127ms    0.32us    0.000ms
             DictWithFloatKeys:     14ms     48ms    0.05us    0.000ms
           DictWithIntegerKeys:     17ms     47ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     49ms    0.04us    0.000ms
                      ForLoops:     92ms    126ms    5.03us    0.000ms
                    IfThenElse:     15ms     73ms    0.05us    0.000ms
                   ListSlicing:     26ms     40ms    2.87us    0.000ms
                NestedForLoops:     78ms    114ms    0.08us    0.000ms
          NormalClassAttribute:     22ms     60ms    0.05us    0.000ms
       NormalInstanceAttribute:     20ms     53ms    0.04us    0.000ms
           PythonFunctionCalls:     40ms     92ms    0.28us    0.000ms
             PythonMethodCalls:     36ms     58ms    0.26us    0.000ms
                     Recursion:     43ms     84ms    1.68us    0.000ms
                  SecondImport:     36ms     56ms    0.56us    0.000ms
           SecondPackageImport:     40ms     53ms    0.53us    0.000ms
         SecondSubmoduleImport:     67ms     75ms    0.75us    0.000ms
       SimpleComplexArithmetic:     16ms     59ms    0.07us    0.000ms
        SimpleDictManipulation:     56ms    115ms    0.10us    0.000ms
         SimpleFloatArithmetic:     20ms    106ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     78ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     80ms    0.07us    0.000ms
          SimpleLongArithmetic:     27ms     72ms    0.11us    0.000ms
                    SmallLists:     65ms    100ms    0.15us    0.000ms
                   SmallTuples:     63ms    118ms    0.22us    0.000ms
         SpecialClassAttribute:     22ms     60ms    0.05us    0.000ms
      SpecialInstanceAttribute:     20ms     54ms    0.05us    0.000ms
                StringMappings:    175ms    207ms    0.82us    0.000ms
              StringPredicates:     49ms     92ms    0.13us    0.000ms
                 StringSlicing:     96ms    120ms    0.21us    0.000ms
                     TryExcept:      1ms     21ms    0.01us    0.000ms
                TryRaiseExcept:     88ms    102ms    1.60us    0.000ms
                  TupleSlicing:     40ms     51ms    0.19us    0.000ms
               UnicodeMappings:    109ms    148ms    4.10us    0.000ms
             UnicodePredicates:     43ms     87ms    0.16us    0.000ms
             UnicodeProperties:    332ms    397ms    0.99us    0.000ms
                UnicodeSlicing:     89ms    106ms    0.22us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3099ms   4946ms

===== DaCapo 9.12-MR1 jython PASSED in 22454 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.410 seconds.
* Round 2 done in 3.253 seconds.
* Round 3 done in 3.237 seconds.
* Round 4 done in 3.073 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:34:48
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     21ms     50ms    0.10us    0.000ms
           BuiltinMethodLookup:     38ms     76ms    0.07us    0.000ms
                 CompareFloats:     14ms     54ms    0.04us    0.000ms
         CompareFloatsIntegers:     18ms     41ms    0.05us    0.000ms
               CompareIntegers:     17ms     54ms    0.03us    0.000ms
        CompareInternedStrings:     35ms     86ms    0.06us    0.000ms
                  CompareLongs:     15ms     38ms    0.04us    0.000ms
                CompareStrings:     27ms     64ms    0.06us    0.000ms
                CompareUnicode:     23ms     50ms    0.07us    0.000ms
                 ConcatStrings:    265ms    346ms    0.69us    0.000ms
                 ConcatUnicode:    168ms    245ms    0.82us    0.000ms
               CreateInstances:     77ms    104ms    0.93us    0.000ms
            CreateNewInstances:     83ms    109ms    1.30us    0.000ms
       CreateStringsWithConcat:     91ms    157ms    0.16us    0.000ms
       CreateUnicodeWithConcat:     37ms     63ms    0.16us    0.000ms
                  DictCreation:     91ms    138ms    0.35us    0.000ms
             DictWithFloatKeys:     14ms     49ms    0.05us    0.000ms
           DictWithIntegerKeys:     17ms     48ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     48ms    0.04us    0.000ms
                      ForLoops:     90ms    122ms    4.87us    0.000ms
                    IfThenElse:     15ms     72ms    0.05us    0.000ms
                   ListSlicing:     23ms     41ms    2.89us    0.000ms
                NestedForLoops:     77ms    107ms    0.07us    0.000ms
          NormalClassAttribute:     20ms     57ms    0.05us    0.000ms
       NormalInstanceAttribute:     21ms     57ms    0.05us    0.000ms
           PythonFunctionCalls:     43ms     96ms    0.29us    0.000ms
             PythonMethodCalls:     31ms     70ms    0.31us    0.000ms
                     Recursion:     39ms    124ms    2.48us    0.000ms
                  SecondImport:     38ms     70ms    0.70us    0.000ms
           SecondPackageImport:     39ms     46ms    0.46us    0.000ms
         SecondSubmoduleImport:     65ms     77ms    0.77us    0.000ms
       SimpleComplexArithmetic:     16ms     68ms    0.08us    0.000ms
        SimpleDictManipulation:     55ms    114ms    0.10us    0.000ms
         SimpleFloatArithmetic:     18ms     99ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     81ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     15ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     82ms    0.07us    0.000ms
          SimpleLongArithmetic:     31ms     80ms    0.12us    0.000ms
                    SmallLists:     62ms     93ms    0.14us    0.000ms
                   SmallTuples:     66ms    126ms    0.23us    0.000ms
         SpecialClassAttribute:     20ms     56ms    0.05us    0.000ms
      SpecialInstanceAttribute:     20ms     55ms    0.05us    0.000ms
                StringMappings:    182ms    204ms    0.81us    0.000ms
              StringPredicates:     41ms     95ms    0.14us    0.000ms
                 StringSlicing:     85ms    109ms    0.19us    0.000ms
                     TryExcept:      0ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     82ms    105ms    1.64us    0.000ms
                  TupleSlicing:     34ms     51ms    0.19us    0.000ms
               UnicodeMappings:    124ms    150ms    4.15us    0.000ms
             UnicodePredicates:     39ms     77ms    0.14us    0.000ms
             UnicodeProperties:    304ms    394ms    0.99us    0.000ms
                UnicodeSlicing:     76ms    111ms    0.23us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2889ms   4993ms

===== DaCapo 9.12-MR1 jython PASSED in 22459 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.399 seconds.
* Round 2 done in 3.413 seconds.
* Round 3 done in 3.331 seconds.
* Round 4 done in 3.166 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:35:19
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     22ms     52ms    0.10us    0.000ms
           BuiltinMethodLookup:     45ms     84ms    0.08us    0.000ms
                 CompareFloats:     14ms     97ms    0.08us    0.000ms
         CompareFloatsIntegers:     18ms     54ms    0.06us    0.000ms
               CompareIntegers:     17ms     53ms    0.03us    0.000ms
        CompareInternedStrings:     37ms     86ms    0.06us    0.000ms
                  CompareLongs:     17ms     40ms    0.04us    0.000ms
                CompareStrings:     27ms     61ms    0.06us    0.000ms
                CompareUnicode:     23ms     50ms    0.07us    0.000ms
                 ConcatStrings:    269ms    362ms    0.72us    0.000ms
                 ConcatUnicode:    165ms    201ms    0.67us    0.000ms
               CreateInstances:     81ms     99ms    0.88us    0.000ms
            CreateNewInstances:     95ms    114ms    1.36us    0.000ms
       CreateStringsWithConcat:    106ms    159ms    0.16us    0.000ms
       CreateUnicodeWithConcat:     45ms     60ms    0.15us    0.000ms
                  DictCreation:     98ms    133ms    0.33us    0.000ms
             DictWithFloatKeys:     15ms     49ms    0.05us    0.000ms
           DictWithIntegerKeys:     17ms     45ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     49ms    0.04us    0.000ms
                      ForLoops:     92ms    125ms    4.99us    0.000ms
                    IfThenElse:     16ms     74ms    0.06us    0.000ms
                   ListSlicing:     28ms     34ms    2.46us    0.000ms
                NestedForLoops:     83ms    112ms    0.07us    0.000ms
          NormalClassAttribute:     24ms     59ms    0.05us    0.000ms
       NormalInstanceAttribute:     21ms     58ms    0.05us    0.000ms
           PythonFunctionCalls:     39ms     96ms    0.29us    0.000ms
             PythonMethodCalls:     35ms     71ms    0.32us    0.000ms
                     Recursion:     39ms     54ms    1.09us    0.000ms
                  SecondImport:     38ms     67ms    0.67us    0.000ms
           SecondPackageImport:     41ms     48ms    0.48us    0.000ms
         SecondSubmoduleImport:     71ms     81ms    0.81us    0.000ms
       SimpleComplexArithmetic:     17ms    106ms    0.12us    0.000ms
        SimpleDictManipulation:     56ms    117ms    0.10us    0.000ms
         SimpleFloatArithmetic:     21ms    112ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     17ms     81ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     36ms     86ms    0.07us    0.000ms
          SimpleLongArithmetic:     25ms     70ms    0.11us    0.000ms
                    SmallLists:     67ms     95ms    0.14us    0.000ms
                   SmallTuples:     68ms    118ms    0.22us    0.000ms
         SpecialClassAttribute:     24ms     61ms    0.05us    0.000ms
      SpecialInstanceAttribute:     22ms     57ms    0.05us    0.000ms
                StringMappings:    190ms    236ms    0.94us    0.000ms
              StringPredicates:     48ms     93ms    0.13us    0.000ms
                 StringSlicing:     94ms    112ms    0.20us    0.000ms
                     TryExcept:      0ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     90ms    102ms    1.59us    0.000ms
                  TupleSlicing:     41ms     50ms    0.19us    0.000ms
               UnicodeMappings:    123ms    157ms    4.37us    0.000ms
             UnicodePredicates:     42ms     84ms    0.16us    0.000ms
             UnicodeProperties:    327ms    421ms    1.05us    0.000ms
                UnicodeSlicing:     76ms    106ms    0.22us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3055ms   5077ms

===== DaCapo 9.12-MR1 jython PASSED in 22815 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.707 seconds.
* Round 2 done in 3.109 seconds.
* Round 3 done in 3.299 seconds.
* Round 4 done in 3.234 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:35:48
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     23ms     44ms    0.09us    0.000ms
           BuiltinMethodLookup:     42ms     78ms    0.07us    0.000ms
                 CompareFloats:     15ms     95ms    0.08us    0.000ms
         CompareFloatsIntegers:     19ms     51ms    0.06us    0.000ms
               CompareIntegers:     20ms     57ms    0.03us    0.000ms
        CompareInternedStrings:     38ms     86ms    0.06us    0.000ms
                  CompareLongs:     17ms     40ms    0.04us    0.000ms
                CompareStrings:     28ms     63ms    0.06us    0.000ms
                CompareUnicode:     22ms     47ms    0.06us    0.000ms
                 ConcatStrings:    274ms    349ms    0.70us    0.000ms
                 ConcatUnicode:    165ms    202ms    0.67us    0.000ms
               CreateInstances:     82ms    103ms    0.92us    0.000ms
            CreateNewInstances:     98ms    119ms    1.42us    0.000ms
       CreateStringsWithConcat:     98ms    137ms    0.14us    0.000ms
       CreateUnicodeWithConcat:     41ms     59ms    0.15us    0.000ms
                  DictCreation:     97ms    140ms    0.35us    0.000ms
             DictWithFloatKeys:     14ms     50ms    0.06us    0.000ms
           DictWithIntegerKeys:     17ms     46ms    0.04us    0.000ms
            DictWithStringKeys:     18ms     47ms    0.04us    0.000ms
                      ForLoops:     91ms    127ms    5.09us    0.000ms
                    IfThenElse:     16ms     73ms    0.05us    0.000ms
                   ListSlicing:     23ms     36ms    2.59us    0.000ms
                NestedForLoops:     77ms    100ms    0.07us    0.000ms
          NormalClassAttribute:     24ms     59ms    0.05us    0.000ms
       NormalInstanceAttribute:     21ms     56ms    0.05us    0.000ms
           PythonFunctionCalls:     40ms     94ms    0.28us    0.000ms
             PythonMethodCalls:     35ms     74ms    0.33us    0.000ms
                     Recursion:     47ms     81ms    1.62us    0.000ms
                  SecondImport:     41ms     64ms    0.64us    0.000ms
           SecondPackageImport:     40ms     49ms    0.49us    0.000ms
         SecondSubmoduleImport:     69ms     86ms    0.86us    0.000ms
       SimpleComplexArithmetic:     18ms     73ms    0.08us    0.000ms
        SimpleDictManipulation:     57ms    121ms    0.10us    0.000ms
         SimpleFloatArithmetic:     19ms    113ms    0.09us    0.000ms
      SimpleIntFloatArithmetic:     16ms     82ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     68ms    0.05us    0.000ms
        SimpleListManipulation:     35ms     83ms    0.07us    0.000ms
          SimpleLongArithmetic:     32ms     77ms    0.12us    0.000ms
                    SmallLists:     64ms     96ms    0.14us    0.000ms
                   SmallTuples:     64ms    125ms    0.23us    0.000ms
         SpecialClassAttribute:     24ms     58ms    0.05us    0.000ms
      SpecialInstanceAttribute:     22ms     55ms    0.05us    0.000ms
                StringMappings:    164ms    217ms    0.86us    0.000ms
              StringPredicates:     47ms     96ms    0.14us    0.000ms
                 StringSlicing:     95ms    120ms    0.21us    0.000ms
                     TryExcept:      0ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     91ms    111ms    1.73us    0.000ms
                  TupleSlicing:     41ms     54ms    0.21us    0.000ms
               UnicodeMappings:    115ms    152ms    4.24us    0.000ms
             UnicodePredicates:     44ms     89ms    0.16us    0.000ms
             UnicodeProperties:    328ms    430ms    1.08us    0.000ms
                UnicodeSlicing:     98ms    132ms    0.27us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3042ms   5087ms

===== DaCapo 9.12-MR1 jython PASSED in 22951 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 11.068 seconds.
* Round 2 done in 3.402 seconds.
* Round 3 done in 3.427 seconds.
* Round 4 done in 3.265 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:36:19
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     22ms     54ms    0.11us    0.000ms
           BuiltinMethodLookup:     43ms     88ms    0.08us    0.000ms
                 CompareFloats:     16ms     99ms    0.08us    0.000ms
         CompareFloatsIntegers:     19ms     53ms    0.06us    0.000ms
               CompareIntegers:     19ms     55ms    0.03us    0.000ms
        CompareInternedStrings:     37ms     86ms    0.06us    0.000ms
                  CompareLongs:     17ms     40ms    0.04us    0.000ms
                CompareStrings:     28ms     61ms    0.06us    0.000ms
                CompareUnicode:     22ms     49ms    0.06us    0.000ms
                 ConcatStrings:    324ms    402ms    0.80us    0.000ms
                 ConcatUnicode:    229ms    259ms    0.86us    0.000ms
               CreateInstances:     85ms    105ms    0.93us    0.000ms
            CreateNewInstances:     91ms    114ms    1.35us    0.000ms
       CreateStringsWithConcat:    109ms    166ms    0.17us    0.000ms
       CreateUnicodeWithConcat:     45ms     66ms    0.16us    0.000ms
                  DictCreation:     94ms    142ms    0.35us    0.000ms
             DictWithFloatKeys:     15ms     52ms    0.06us    0.000ms
           DictWithIntegerKeys:     17ms     49ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     47ms    0.04us    0.000ms
                      ForLoops:     92ms    143ms    5.71us    0.000ms
                    IfThenElse:     16ms     73ms    0.05us    0.000ms
                   ListSlicing:     27ms     40ms    2.89us    0.000ms
                NestedForLoops:     77ms     95ms    0.06us    0.000ms
          NormalClassAttribute:     24ms     60ms    0.05us    0.000ms
       NormalInstanceAttribute:     23ms     56ms    0.05us    0.000ms
           PythonFunctionCalls:     42ms     93ms    0.28us    0.000ms
             PythonMethodCalls:     39ms     73ms    0.32us    0.000ms
                     Recursion:     42ms     78ms    1.57us    0.000ms
                  SecondImport:     38ms     64ms    0.64us    0.000ms
           SecondPackageImport:     42ms     53ms    0.53us    0.000ms
         SecondSubmoduleImport:     70ms     84ms    0.84us    0.000ms
       SimpleComplexArithmetic:     18ms     65ms    0.07us    0.000ms
        SimpleDictManipulation:     55ms    118ms    0.10us    0.000ms
         SimpleFloatArithmetic:     22ms    112ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     17ms     85ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     17ms     68ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     97ms    0.08us    0.000ms
          SimpleLongArithmetic:     29ms     80ms    0.12us    0.000ms
                    SmallLists:     71ms    101ms    0.15us    0.000ms
                   SmallTuples:     68ms    120ms    0.22us    0.000ms
         SpecialClassAttribute:     24ms     59ms    0.05us    0.000ms
      SpecialInstanceAttribute:     23ms     56ms    0.05us    0.000ms
                StringMappings:    168ms    230ms    0.91us    0.000ms
              StringPredicates:     45ms     86ms    0.12us    0.000ms
                 StringSlicing:     87ms    120ms    0.21us    0.000ms
                     TryExcept:      0ms     19ms    0.01us    0.000ms
                TryRaiseExcept:     89ms    106ms    1.66us    0.000ms
                  TupleSlicing:     35ms     51ms    0.20us    0.000ms
               UnicodeMappings:    113ms    192ms    5.33us    0.000ms
             UnicodePredicates:     57ms     95ms    0.18us    0.000ms
             UnicodeProperties:    334ms    422ms    1.05us    0.000ms
                UnicodeSlicing:     77ms    108ms    0.22us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3164ms   5290ms

===== DaCapo 9.12-MR1 jython PASSED in 23704 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.381 seconds.
* Round 2 done in 3.128 seconds.
* Round 3 done in 3.046 seconds.
* Round 4 done in 3.137 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:36:50
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     19ms     52ms    0.10us    0.000ms
           BuiltinMethodLookup:     40ms     77ms    0.07us    0.000ms
                 CompareFloats:     14ms     55ms    0.05us    0.000ms
         CompareFloatsIntegers:     18ms     42ms    0.05us    0.000ms
               CompareIntegers:     18ms     57ms    0.03us    0.000ms
        CompareInternedStrings:     37ms     87ms    0.06us    0.000ms
                  CompareLongs:     16ms     40ms    0.04us    0.000ms
                CompareStrings:     28ms     63ms    0.06us    0.000ms
                CompareUnicode:     24ms     50ms    0.07us    0.000ms
                 ConcatStrings:    240ms    332ms    0.66us    0.000ms
                 ConcatUnicode:    147ms    190ms    0.63us    0.000ms
               CreateInstances:     79ms     99ms    0.88us    0.000ms
            CreateNewInstances:     89ms    107ms    1.27us    0.000ms
       CreateStringsWithConcat:     88ms    143ms    0.14us    0.000ms
       CreateUnicodeWithConcat:     39ms     68ms    0.17us    0.000ms
                  DictCreation:     93ms    136ms    0.34us    0.000ms
             DictWithFloatKeys:     14ms     60ms    0.07us    0.000ms
           DictWithIntegerKeys:     16ms     47ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     48ms    0.04us    0.000ms
                      ForLoops:     91ms    124ms    4.98us    0.000ms
                    IfThenElse:     16ms     75ms    0.06us    0.000ms
                   ListSlicing:     15ms     40ms    2.84us    0.000ms
                NestedForLoops:     76ms     98ms    0.07us    0.000ms
          NormalClassAttribute:     22ms     57ms    0.05us    0.000ms
       NormalInstanceAttribute:     22ms     57ms    0.05us    0.000ms
           PythonFunctionCalls:     41ms     96ms    0.29us    0.000ms
             PythonMethodCalls:     37ms     69ms    0.31us    0.000ms
                     Recursion:     41ms    123ms    2.47us    0.000ms
                  SecondImport:     40ms     75ms    0.75us    0.000ms
           SecondPackageImport:     38ms     53ms    0.53us    0.000ms
         SecondSubmoduleImport:     67ms     78ms    0.78us    0.000ms
       SimpleComplexArithmetic:     16ms     60ms    0.07us    0.000ms
        SimpleDictManipulation:     56ms    115ms    0.10us    0.000ms
         SimpleFloatArithmetic:     20ms    104ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     77ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     69ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     78ms    0.07us    0.000ms
          SimpleLongArithmetic:     25ms     74ms    0.11us    0.000ms
                    SmallLists:     67ms     95ms    0.14us    0.000ms
                   SmallTuples:     66ms    128ms    0.24us    0.000ms
         SpecialClassAttribute:     22ms     57ms    0.05us    0.000ms
      SpecialInstanceAttribute:     22ms     57ms    0.05us    0.000ms
                StringMappings:    174ms    200ms    0.79us    0.000ms
              StringPredicates:     41ms     83ms    0.12us    0.000ms
                 StringSlicing:     81ms    116ms    0.21us    0.000ms
                     TryExcept:      0ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     90ms    113ms    1.76us    0.000ms
                  TupleSlicing:     37ms     51ms    0.19us    0.000ms
               UnicodeMappings:    109ms    144ms    3.99us    0.000ms
             UnicodePredicates:     41ms     79ms    0.15us    0.000ms
             UnicodeProperties:    318ms    400ms    1.00us    0.000ms
                UnicodeSlicing:     72ms    103ms    0.21us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2865ms   4923ms

===== DaCapo 9.12-MR1 jython PASSED in 22166 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.186 seconds.
* Round 2 done in 3.250 seconds.
* Round 3 done in 3.233 seconds.
* Round 4 done in 3.162 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:37:19
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     18ms     47ms    0.09us    0.000ms
           BuiltinMethodLookup:     38ms     76ms    0.07us    0.000ms
                 CompareFloats:     15ms     57ms    0.05us    0.000ms
         CompareFloatsIntegers:     19ms     50ms    0.06us    0.000ms
               CompareIntegers:     19ms     55ms    0.03us    0.000ms
        CompareInternedStrings:     36ms     86ms    0.06us    0.000ms
                  CompareLongs:     17ms     39ms    0.04us    0.000ms
                CompareStrings:     26ms     59ms    0.06us    0.000ms
                CompareUnicode:     21ms     47ms    0.06us    0.000ms
                 ConcatStrings:    308ms    365ms    0.73us    0.000ms
                 ConcatUnicode:    208ms    223ms    0.74us    0.000ms
               CreateInstances:     84ms    102ms    0.91us    0.000ms
            CreateNewInstances:     95ms    109ms    1.30us    0.000ms
       CreateStringsWithConcat:    115ms    155ms    0.15us    0.000ms
       CreateUnicodeWithConcat:     47ms     61ms    0.15us    0.000ms
                  DictCreation:     98ms    140ms    0.35us    0.000ms
             DictWithFloatKeys:     14ms     61ms    0.07us    0.000ms
           DictWithIntegerKeys:     16ms     46ms    0.04us    0.000ms
            DictWithStringKeys:     16ms     47ms    0.04us    0.000ms
                      ForLoops:     92ms    160ms    6.42us    0.000ms
                    IfThenElse:     15ms     72ms    0.05us    0.000ms
                   ListSlicing:     29ms     44ms    3.16us    0.000ms
                NestedForLoops:     82ms    124ms    0.08us    0.000ms
          NormalClassAttribute:     22ms     60ms    0.05us    0.000ms
       NormalInstanceAttribute:     19ms     53ms    0.04us    0.000ms
           PythonFunctionCalls:     43ms     95ms    0.29us    0.000ms
             PythonMethodCalls:     35ms     55ms    0.24us    0.000ms
                     Recursion:     40ms     88ms    1.76us    0.000ms
                  SecondImport:     38ms     56ms    0.56us    0.000ms
           SecondPackageImport:     40ms     45ms    0.45us    0.000ms
         SecondSubmoduleImport:     66ms     76ms    0.76us    0.000ms
       SimpleComplexArithmetic:     16ms     63ms    0.07us    0.000ms
        SimpleDictManipulation:     57ms    116ms    0.10us    0.000ms
         SimpleFloatArithmetic:     21ms    105ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     79ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     15ms     65ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     81ms    0.07us    0.000ms
          SimpleLongArithmetic:     30ms     74ms    0.11us    0.000ms
                    SmallLists:     64ms     94ms    0.14us    0.000ms
                   SmallTuples:     64ms    129ms    0.24us    0.000ms
         SpecialClassAttribute:     21ms     57ms    0.05us    0.000ms
      SpecialInstanceAttribute:     20ms     54ms    0.04us    0.000ms
                StringMappings:    182ms    208ms    0.82us    0.000ms
              StringPredicates:     47ms     86ms    0.12us    0.000ms
                 StringSlicing:     82ms    108ms    0.19us    0.000ms
                     TryExcept:      1ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     84ms     98ms    1.53us    0.000ms
                  TupleSlicing:     38ms     50ms    0.19us    0.000ms
               UnicodeMappings:    105ms    144ms    4.01us    0.000ms
             UnicodePredicates:     44ms     81ms    0.15us    0.000ms
             UnicodeProperties:    317ms    387ms    0.97us    0.000ms
                UnicodeSlicing:     78ms    104ms    0.21us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3067ms   4958ms

===== DaCapo 9.12-MR1 jython PASSED in 22245 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.651 seconds.
* Round 2 done in 3.331 seconds.
* Round 3 done in 3.314 seconds.
* Round 4 done in 3.288 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:37:50
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     24ms     61ms    0.12us    0.000ms
           BuiltinMethodLookup:     46ms     91ms    0.09us    0.000ms
                 CompareFloats:     14ms     99ms    0.08us    0.000ms
         CompareFloatsIntegers:     17ms     50ms    0.06us    0.000ms
               CompareIntegers:     19ms     56ms    0.03us    0.000ms
        CompareInternedStrings:     35ms     84ms    0.06us    0.000ms
                  CompareLongs:     16ms     39ms    0.04us    0.000ms
                CompareStrings:     27ms     61ms    0.06us    0.000ms
                CompareUnicode:     24ms     54ms    0.07us    0.000ms
                 ConcatStrings:    308ms    378ms    0.76us    0.000ms
                 ConcatUnicode:    212ms    243ms    0.81us    0.000ms
               CreateInstances:     82ms    104ms    0.93us    0.000ms
            CreateNewInstances:     92ms    110ms    1.31us    0.000ms
       CreateStringsWithConcat:     96ms    157ms    0.16us    0.000ms
       CreateUnicodeWithConcat:     42ms     68ms    0.17us    0.000ms
                  DictCreation:     97ms    131ms    0.33us    0.000ms
             DictWithFloatKeys:     14ms     50ms    0.06us    0.000ms
           DictWithIntegerKeys:     16ms     46ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     47ms    0.04us    0.000ms
                      ForLoops:     93ms    111ms    4.45us    0.000ms
                    IfThenElse:     15ms     73ms    0.05us    0.000ms
                   ListSlicing:     26ms     37ms    2.66us    0.000ms
                NestedForLoops:     77ms     96ms    0.06us    0.000ms
          NormalClassAttribute:     23ms     59ms    0.05us    0.000ms
       NormalInstanceAttribute:     19ms     56ms    0.05us    0.000ms
           PythonFunctionCalls:     44ms     97ms    0.29us    0.000ms
             PythonMethodCalls:     35ms     76ms    0.34us    0.000ms
                     Recursion:     44ms     84ms    1.68us    0.000ms
                  SecondImport:     39ms     81ms    0.81us    0.000ms
           SecondPackageImport:     43ms     54ms    0.54us    0.000ms
         SecondSubmoduleImport:     71ms     94ms    0.94us    0.000ms
       SimpleComplexArithmetic:     16ms     68ms    0.08us    0.000ms
        SimpleDictManipulation:     56ms     99ms    0.08us    0.000ms
         SimpleFloatArithmetic:     20ms     97ms    0.07us    0.000ms
      SimpleIntFloatArithmetic:     15ms     84ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     70ms    0.05us    0.000ms
        SimpleListManipulation:     35ms     76ms    0.06us    0.000ms
          SimpleLongArithmetic:     25ms     70ms    0.11us    0.000ms
                    SmallLists:     65ms     99ms    0.15us    0.000ms
                   SmallTuples:     66ms    120ms    0.22us    0.000ms
         SpecialClassAttribute:     23ms     58ms    0.05us    0.000ms
      SpecialInstanceAttribute:     19ms     54ms    0.05us    0.000ms
                StringMappings:    187ms    235ms    0.93us    0.000ms
              StringPredicates:     46ms     92ms    0.13us    0.000ms
                 StringSlicing:     97ms    120ms    0.21us    0.000ms
                     TryExcept:      1ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     91ms    106ms    1.66us    0.000ms
                  TupleSlicing:     40ms     52ms    0.20us    0.000ms
               UnicodeMappings:    122ms    157ms    4.35us    0.000ms
             UnicodePredicates:     47ms     84ms    0.16us    0.000ms
             UnicodeProperties:    334ms    422ms    1.05us    0.000ms
                UnicodeSlicing:     96ms    116ms    0.24us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3144ms   5146ms

===== DaCapo 9.12-MR1 jython PASSED in 23233 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.654 seconds.
* Round 2 done in 3.348 seconds.
* Round 3 done in 3.043 seconds.
* Round 4 done in 2.838 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:38:20
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     17ms     48ms    0.09us    0.000ms
           BuiltinMethodLookup:     38ms     76ms    0.07us    0.000ms
                 CompareFloats:     14ms     94ms    0.08us    0.000ms
         CompareFloatsIntegers:     18ms     51ms    0.06us    0.000ms
               CompareIntegers:     19ms     55ms    0.03us    0.000ms
        CompareInternedStrings:     36ms     87ms    0.06us    0.000ms
                  CompareLongs:     16ms     39ms    0.04us    0.000ms
                CompareStrings:     27ms     61ms    0.06us    0.000ms
                CompareUnicode:     22ms     47ms    0.06us    0.000ms
                 ConcatStrings:    262ms    348ms    0.70us    0.000ms
                 ConcatUnicode:    155ms    215ms    0.72us    0.000ms
               CreateInstances:     80ms     98ms    0.87us    0.000ms
            CreateNewInstances:     87ms    115ms    1.37us    0.000ms
       CreateStringsWithConcat:     93ms    151ms    0.15us    0.000ms
       CreateUnicodeWithConcat:     41ms     63ms    0.16us    0.000ms
                  DictCreation:     88ms    127ms    0.32us    0.000ms
             DictWithFloatKeys:     14ms     51ms    0.06us    0.000ms
           DictWithIntegerKeys:     17ms     46ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     47ms    0.04us    0.000ms
                      ForLoops:     91ms    128ms    5.14us    0.000ms
                    IfThenElse:     16ms     72ms    0.05us    0.000ms
                   ListSlicing:     18ms     36ms    2.59us    0.000ms
                NestedForLoops:     78ms     96ms    0.06us    0.000ms
          NormalClassAttribute:     23ms     64ms    0.05us    0.000ms
       NormalInstanceAttribute:     22ms     56ms    0.05us    0.000ms
           PythonFunctionCalls:     33ms     68ms    0.21us    0.000ms
             PythonMethodCalls:     35ms     68ms    0.30us    0.000ms
                     Recursion:     41ms     76ms    1.53us    0.000ms
                  SecondImport:     32ms     68ms    0.68us    0.000ms
           SecondPackageImport:     33ms     45ms    0.45us    0.000ms
         SecondSubmoduleImport:     66ms     80ms    0.80us    0.000ms
       SimpleComplexArithmetic:     13ms     58ms    0.07us    0.000ms
        SimpleDictManipulation:     59ms    116ms    0.10us    0.000ms
         SimpleFloatArithmetic:     17ms    104ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     81ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     85ms    0.07us    0.000ms
          SimpleLongArithmetic:     28ms     71ms    0.11us    0.000ms
                    SmallLists:     63ms     91ms    0.13us    0.000ms
                   SmallTuples:     66ms    134ms    0.25us    0.000ms
         SpecialClassAttribute:     23ms     58ms    0.05us    0.000ms
      SpecialInstanceAttribute:     22ms     57ms    0.05us    0.000ms
                StringMappings:    111ms    223ms    0.88us    0.000ms
              StringPredicates:     44ms     91ms    0.13us    0.000ms
                 StringSlicing:     68ms    120ms    0.21us    0.000ms
                     TryExcept:      1ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     87ms    118ms    1.84us    0.000ms
                  TupleSlicing:     32ms     48ms    0.18us    0.000ms
               UnicodeMappings:    106ms    151ms    4.19us    0.000ms
             UnicodePredicates:     39ms     74ms    0.14us    0.000ms
             UnicodeProperties:    317ms    418ms    1.04us    0.000ms
                UnicodeSlicing:     80ms    108ms    0.22us    0.000ms
-------------------------------------------------------------------------------
Totals:                           2791ms   4971ms

===== DaCapo 9.12-MR1 jython PASSED in 22381 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.621 seconds.
* Round 2 done in 3.324 seconds.
* Round 3 done in 3.262 seconds.
* Round 4 done in 3.158 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:38:51
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     18ms     56ms    0.11us    0.000ms
           BuiltinMethodLookup:     42ms     79ms    0.08us    0.000ms
                 CompareFloats:     15ms     97ms    0.08us    0.000ms
         CompareFloatsIntegers:     19ms     53ms    0.06us    0.000ms
               CompareIntegers:     20ms     57ms    0.03us    0.000ms
        CompareInternedStrings:     36ms     86ms    0.06us    0.000ms
                  CompareLongs:     16ms     39ms    0.04us    0.000ms
                CompareStrings:     28ms     62ms    0.06us    0.000ms
                CompareUnicode:     22ms     48ms    0.06us    0.000ms
                 ConcatStrings:    267ms    366ms    0.73us    0.000ms
                 ConcatUnicode:    168ms    192ms    0.64us    0.000ms
               CreateInstances:     81ms    104ms    0.93us    0.000ms
            CreateNewInstances:     92ms    109ms    1.30us    0.000ms
       CreateStringsWithConcat:     90ms    141ms    0.14us    0.000ms
       CreateUnicodeWithConcat:     39ms     58ms    0.14us    0.000ms
                  DictCreation:     93ms    132ms    0.33us    0.000ms
             DictWithFloatKeys:     15ms     62ms    0.07us    0.000ms
           DictWithIntegerKeys:     17ms     47ms    0.04us    0.000ms
            DictWithStringKeys:     17ms     47ms    0.04us    0.000ms
                      ForLoops:     91ms    128ms    5.11us    0.000ms
                    IfThenElse:     16ms     73ms    0.05us    0.000ms
                   ListSlicing:     20ms     34ms    2.43us    0.000ms
                NestedForLoops:     81ms    141ms    0.09us    0.000ms
          NormalClassAttribute:     24ms     62ms    0.05us    0.000ms
       NormalInstanceAttribute:     22ms     56ms    0.05us    0.000ms
           PythonFunctionCalls:     37ms     73ms    0.22us    0.000ms
             PythonMethodCalls:     36ms     69ms    0.31us    0.000ms
                     Recursion:     47ms     84ms    1.68us    0.000ms
                  SecondImport:     47ms     73ms    0.73us    0.000ms
           SecondPackageImport:     45ms     55ms    0.55us    0.000ms
         SecondSubmoduleImport:     75ms     87ms    0.87us    0.000ms
       SimpleComplexArithmetic:     15ms     62ms    0.07us    0.000ms
        SimpleDictManipulation:     56ms    112ms    0.09us    0.000ms
         SimpleFloatArithmetic:     19ms    109ms    0.08us    0.000ms
      SimpleIntFloatArithmetic:     16ms     79ms    0.06us    0.000ms
       SimpleIntegerArithmetic:     16ms     67ms    0.05us    0.000ms
        SimpleListManipulation:     35ms     83ms    0.07us    0.000ms
          SimpleLongArithmetic:     24ms     68ms    0.10us    0.000ms
                    SmallLists:     64ms     96ms    0.14us    0.000ms
                   SmallTuples:     66ms    119ms    0.22us    0.000ms
         SpecialClassAttribute:     24ms     59ms    0.05us    0.000ms
      SpecialInstanceAttribute:     21ms     55ms    0.05us    0.000ms
                StringMappings:    182ms    245ms    0.97us    0.000ms
              StringPredicates:     42ms     84ms    0.12us    0.000ms
                 StringSlicing:     92ms    119ms    0.21us    0.000ms
                     TryExcept:      1ms     21ms    0.01us    0.000ms
                TryRaiseExcept:     89ms    106ms    1.66us    0.000ms
                  TupleSlicing:     36ms     50ms    0.19us    0.000ms
               UnicodeMappings:    131ms    164ms    4.54us    0.000ms
             UnicodePredicates:     43ms     82ms    0.15us    0.000ms
             UnicodeProperties:    351ms    428ms    1.07us    0.000ms
                UnicodeSlicing:     81ms    112ms    0.23us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3040ms   5091ms

===== DaCapo 9.12-MR1 jython PASSED in 22949 msec =====
<gc check installed>
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.common.base.internal.Finalizer (file:/vagrant/./scratch/jar/guava-r07.jar) to field java.lang.Thread.inheritableThreadLocals
WARNING: Please consider reporting this to the maintainers of com.google.common.base.internal.Finalizer
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
===== DaCapo 9.12-MR1 jython starting =====
-------------------------------------------------------------------------------
PYBENCH 2.0
-------------------------------------------------------------------------------
* using Python 2.5.2
* system check interval set to maximum: 2147483647
* using timer: time.time

Calibrating tests. Please wait...

Running 4 round(s) of the suite at warp factor 10:

* Round 1 done in 10.135 seconds.
* Round 2 done in 3.311 seconds.
* Round 3 done in 3.413 seconds.
* Round 4 done in 3.306 seconds.

-------------------------------------------------------------------------------
Benchmark: 2019-06-16 00:39:21
-------------------------------------------------------------------------------

    Rounds: 4
    Warp:   10
    Timer:  time.time

Test                             minimum  average  operation  overhead
-------------------------------------------------------------------------------
          BuiltinFunctionCalls:     22ms     47ms    0.09us    0.000ms
           BuiltinMethodLookup:     45ms     81ms    0.08us    0.000ms
                 CompareFloats:     16ms     49ms    0.04us    0.000ms
         CompareFloatsIntegers:     19ms     43ms    0.05us    0.000ms
               CompareIntegers:     20ms     56ms    0.03us    0.000ms
        CompareInternedStrings:     36ms     86ms    0.06us    0.000ms
                  CompareLongs:     17ms     39ms    0.04us    0.000ms
                CompareStrings:     27ms     59ms    0.06us    0.000ms
                CompareUnicode:     24ms     49ms    0.07us    0.000ms
                 ConcatStrings:    347ms    403ms    0.81us    0.000ms
                 ConcatUnicode:    205ms    229ms    0.76us    0.000ms
               CreateInstances:     81ms    103ms    0.92us    0.000ms
            CreateNewInstances:     90ms    113ms    1.35us    0.000ms
       CreateStringsWithConcat:    120ms    159ms    0.16us    0.000ms
       CreateUnicodeWithConcat:     47ms     62ms    0.16us    0.000ms
                  DictCreation:     96ms    132ms    0.33us    0.000ms
             DictWithFloatKeys:     15ms     46ms    0.05us    0.000ms
           DictWithIntegerKeys:     18ms     47ms    0.04us    0.000ms
            DictWithStringKeys:     18ms     47ms    0.04us    0.000ms
                      ForLoops:     92ms    125ms    4.99us    0.000ms
                    IfThenElse:     16ms     69ms    0.05us    0.000ms
                   ListSlicing:     25ms     34ms    2.43us    0.000ms
                NestedForLoops:     78ms     91ms    0.06us    0.000ms
          NormalClassAttribute:     23ms     61ms    0.05us    0.000ms
       NormalInstanceAttribute:     19ms     53ms    0.04us    0.000ms
           PythonFunctionCalls:     46ms    100ms    0.30us    0.000ms
             PythonMethodCalls:     34ms     56ms    0.25us    0.000ms
                     Recursion:     42ms     94ms    1.88us    0.000ms
                  SecondImport:     38ms     63ms    0.63us    0.000ms
           SecondPackageImport:     41ms     46ms    0.46us    0.000ms
         SecondSubmoduleImport:     70ms     86ms    0.86us    0.000ms
       SimpleComplexArithmetic:     18ms     64ms    0.07us    0.000ms
        SimpleDictManipulation:     57ms    116ms    0.10us    0.000ms
         SimpleFloatArithmetic:     22ms    132ms    0.10us    0.000ms
      SimpleIntFloatArithmetic:     16ms     68ms    0.05us    0.000ms
       SimpleIntegerArithmetic:     15ms     65ms    0.05us    0.000ms
        SimpleListManipulation:     34ms     74ms    0.06us    0.000ms
          SimpleLongArithmetic:     29ms     83ms    0.13us    0.000ms
                    SmallLists:     67ms     98ms    0.14us    0.000ms
                   SmallTuples:     67ms    122ms    0.23us    0.000ms
         SpecialClassAttribute:     23ms     58ms    0.05us    0.000ms
      SpecialInstanceAttribute:     19ms     53ms    0.04us    0.000ms
                StringMappings:    178ms    210ms    0.83us    0.000ms
              StringPredicates:     47ms     96ms    0.14us    0.000ms
                 StringSlicing:     95ms    117ms    0.21us    0.000ms
                     TryExcept:      1ms     20ms    0.01us    0.000ms
                TryRaiseExcept:     88ms    104ms    1.62us    0.000ms
                  TupleSlicing:     44ms     54ms    0.20us    0.000ms
               UnicodeMappings:    110ms    149ms    4.14us    0.000ms
             UnicodePredicates:     52ms    100ms    0.19us    0.000ms
             UnicodeProperties:    337ms    416ms    1.04us    0.000ms
                UnicodeSlicing:     85ms    113ms    0.23us    0.000ms
-------------------------------------------------------------------------------
Totals:                           3191ms   5041ms

===== DaCapo 9.12-MR1 jython PASSED in 22599 msec =====
